Grammar:

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instruction instructions
Rule 3     instructions -> <empty>
Rule 4     instruction -> RETURN list ;
Rule 5     instruction -> CONTINUE ;
Rule 6     instruction -> BREAK ;
Rule 7     instruction -> PRINT list ;
Rule 8     instruction -> loop
Rule 9     instruction -> conditional
Rule 10    instruction -> assignment ;
Rule 11    instruction -> { instructions }
Rule 12    expression -> expression NEQ expression  [precedence=nonassoc, level=3]
Rule 13    expression -> expression EQ expression  [precedence=nonassoc, level=3]
Rule 14    expression -> expression GRTEQ expression  [precedence=nonassoc, level=3]
Rule 15    expression -> expression LESEQ expression  [precedence=nonassoc, level=3]
Rule 16    expression -> expression > expression  [precedence=nonassoc, level=3]
Rule 17    expression -> expression < expression  [precedence=nonassoc, level=3]
Rule 18    expression -> [ list ]
Rule 19    expression -> ( expression )
Rule 20    expression -> matrix_function
Rule 21    expression -> expression / expression  [precedence=left, level=5]
Rule 22    expression -> expression * expression  [precedence=left, level=5]
Rule 23    expression -> expression - expression  [precedence=left, level=4]
Rule 24    expression -> expression + expression  [precedence=left, level=4]
Rule 25    expression -> expression DOTDIV expression  [precedence=left, level=5]
Rule 26    expression -> expression DOTMUL expression  [precedence=left, level=5]
Rule 27    expression -> expression DOTSUB expression  [precedence=left, level=4]
Rule 28    expression -> expression DOTADD expression  [precedence=left, level=4]
Rule 29    expression -> variable
Rule 30    expression -> STRING
Rule 31    expression -> FLOATNUM
Rule 32    expression -> INTNUM
Rule 33    expression -> expression '  [precedence=right, level=8]
Rule 34    expression -> - expression  [precedence=right, level=7]
Rule 35    variable -> reference
Rule 36    variable -> ID
Rule 37    assignment -> variable DIVASSIGN expression
Rule 38    assignment -> variable MULASSIGN expression
Rule 39    assignment -> variable SUBASSIGN expression
Rule 40    assignment -> variable ADDASSIGN expression
Rule 41    assignment -> variable = expression
Rule 42    reference -> expression [ expression , expression ]
Rule 43    list -> expression
Rule 44    list -> expression , list
Rule 45    matrix_function -> EYE ( list )
Rule 46    matrix_function -> ONES ( list )
Rule 47    matrix_function -> ZEROS ( list )
Rule 48    conditional -> IF ( expression ) instruction  [precedence=nonassoc, level=1]
Rule 49    conditional -> IF ( expression ) instruction ELSE instruction  [precedence=nonassoc, level=2]
Rule 50    loop -> FOR variable = range instruction
Rule 51    loop -> WHILE ( expression ) instruction
Rule 52    range -> expression : expression  [precedence=nonassoc, level=6]

Terminals, with rules where they appear:

'                    : 33
(                    : 19 45 46 47 48 49 51
)                    : 19 45 46 47 48 49 51
*                    : 22
+                    : 24
,                    : 42 44
-                    : 23 34
/                    : 21
:                    : 52
;                    : 4 5 6 7 10
<                    : 17
=                    : 41 50
>                    : 16
ADDASSIGN            : 40
BREAK                : 6
CONTINUE             : 5
DIVASSIGN            : 37
DOTADD               : 28
DOTDIV               : 25
DOTMUL               : 26
DOTSUB               : 27
ELSE                 : 49
EQ                   : 13
EYE                  : 45
FLOATNUM             : 31
FOR                  : 50
GRTEQ                : 14
ID                   : 36
IF                   : 48 49
INTNUM               : 32
LESEQ                : 15
MULASSIGN            : 38
NEQ                  : 12
ONES                 : 46
PRINT                : 7
RETURN               : 4
STRING               : 30
SUBASSIGN            : 39
WHILE                : 51
ZEROS                : 47
[                    : 18 42
]                    : 18 42
error                : 
{                    : 11
}                    : 11

Nonterminals, with rules where they appear:

assignment           : 10
conditional          : 9
expression           : 12 12 13 13 14 14 15 15 16 16 17 17 19 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 33 34 37 38 39 40 41 42 42 42 43 44 48 49 51 52 52
instruction          : 2 48 49 49 50 51
instructions         : 1 2 11
list                 : 4 7 18 44 45 46 47
loop                 : 8
matrix_function      : 20
program              : 0
range                : 50
reference            : 35
variable             : 29 37 38 39 40 41 50


state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instruction instructions
    (3) instructions -> .
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    $end            reduce using rule 3 (instructions -> .)
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    expression                     shift and go to state 16
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 1

    (0) S' -> program .


state 2

    (1) program -> instructions .
    $end            reduce using rule 1 (program -> instructions .)


state 3

    (2) instructions -> instruction . instructions
    (2) instructions -> . instruction instructions
    (3) instructions -> .
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    $end            reduce using rule 3 (instructions -> .)
    }               reduce using rule 3 (instructions -> .)
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    instruction                    shift and go to state 3
    instructions                   shift and go to state 29
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    expression                     shift and go to state 16
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 4

    (4) instruction -> RETURN . list ;
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 30
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 5

    (5) instruction -> CONTINUE . ;
    ;               shift and go to state 33


state 6

    (6) instruction -> BREAK . ;
    ;               shift and go to state 34


state 7

    (7) instruction -> PRINT . list ;
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 35
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 8

    (8) instruction -> loop .
    RETURN          reduce using rule 8 (instruction -> loop .)
    CONTINUE        reduce using rule 8 (instruction -> loop .)
    BREAK           reduce using rule 8 (instruction -> loop .)
    PRINT           reduce using rule 8 (instruction -> loop .)
    {               reduce using rule 8 (instruction -> loop .)
    FOR             reduce using rule 8 (instruction -> loop .)
    WHILE           reduce using rule 8 (instruction -> loop .)
    IF              reduce using rule 8 (instruction -> loop .)
    ID              reduce using rule 8 (instruction -> loop .)
    [               reduce using rule 8 (instruction -> loop .)
    (               reduce using rule 8 (instruction -> loop .)
    STRING          reduce using rule 8 (instruction -> loop .)
    FLOATNUM        reduce using rule 8 (instruction -> loop .)
    INTNUM          reduce using rule 8 (instruction -> loop .)
    -               reduce using rule 8 (instruction -> loop .)
    EYE             reduce using rule 8 (instruction -> loop .)
    ONES            reduce using rule 8 (instruction -> loop .)
    ZEROS           reduce using rule 8 (instruction -> loop .)
    $end            reduce using rule 8 (instruction -> loop .)
    }               reduce using rule 8 (instruction -> loop .)
    ELSE            reduce using rule 8 (instruction -> loop .)


state 9

    (9) instruction -> conditional .
    RETURN          reduce using rule 9 (instruction -> conditional .)
    CONTINUE        reduce using rule 9 (instruction -> conditional .)
    BREAK           reduce using rule 9 (instruction -> conditional .)
    PRINT           reduce using rule 9 (instruction -> conditional .)
    {               reduce using rule 9 (instruction -> conditional .)
    FOR             reduce using rule 9 (instruction -> conditional .)
    WHILE           reduce using rule 9 (instruction -> conditional .)
    IF              reduce using rule 9 (instruction -> conditional .)
    ID              reduce using rule 9 (instruction -> conditional .)
    [               reduce using rule 9 (instruction -> conditional .)
    (               reduce using rule 9 (instruction -> conditional .)
    STRING          reduce using rule 9 (instruction -> conditional .)
    FLOATNUM        reduce using rule 9 (instruction -> conditional .)
    INTNUM          reduce using rule 9 (instruction -> conditional .)
    -               reduce using rule 9 (instruction -> conditional .)
    EYE             reduce using rule 9 (instruction -> conditional .)
    ONES            reduce using rule 9 (instruction -> conditional .)
    ZEROS           reduce using rule 9 (instruction -> conditional .)
    $end            reduce using rule 9 (instruction -> conditional .)
    }               reduce using rule 9 (instruction -> conditional .)
    ELSE            reduce using rule 9 (instruction -> conditional .)


state 10

    (10) instruction -> assignment . ;
    ;               shift and go to state 36


state 11

    (11) instruction -> { . instructions }
    (2) instructions -> . instruction instructions
    (3) instructions -> .
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    }               reduce using rule 3 (instructions -> .)
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    instructions                   shift and go to state 37
    instruction                    shift and go to state 3
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    expression                     shift and go to state 16
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 12

    (50) loop -> FOR . variable = range instruction
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    variable                       shift and go to state 38
    reference                      shift and go to state 18
    expression                     shift and go to state 16
    matrix_function                shift and go to state 21

state 13

    (37) assignment -> variable . DIVASSIGN expression
    (38) assignment -> variable . MULASSIGN expression
    (39) assignment -> variable . SUBASSIGN expression
    (40) assignment -> variable . ADDASSIGN expression
    (41) assignment -> variable . = expression
    (29) expression -> variable .
    DIVASSIGN       shift and go to state 39
    MULASSIGN       shift and go to state 40
    SUBASSIGN       shift and go to state 41
    ADDASSIGN       shift and go to state 42
    =               shift and go to state 43
    [               reduce using rule 29 (expression -> variable .)
    NEQ             reduce using rule 29 (expression -> variable .)
    EQ              reduce using rule 29 (expression -> variable .)
    GRTEQ           reduce using rule 29 (expression -> variable .)
    LESEQ           reduce using rule 29 (expression -> variable .)
    >               reduce using rule 29 (expression -> variable .)
    <               reduce using rule 29 (expression -> variable .)
    /               reduce using rule 29 (expression -> variable .)
    *               reduce using rule 29 (expression -> variable .)
    -               reduce using rule 29 (expression -> variable .)
    +               reduce using rule 29 (expression -> variable .)
    DOTDIV          reduce using rule 29 (expression -> variable .)
    DOTMUL          reduce using rule 29 (expression -> variable .)
    DOTSUB          reduce using rule 29 (expression -> variable .)
    DOTADD          reduce using rule 29 (expression -> variable .)
    '               reduce using rule 29 (expression -> variable .)


state 14

    (51) loop -> WHILE . ( expression ) instruction
    (               shift and go to state 44


state 15

    (19) expression -> ( . expression )
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 45
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 16

    (42) reference -> expression . [ expression , expression ]
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    [               shift and go to state 46
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 17

    (48) conditional -> IF . ( expression ) instruction
    (49) conditional -> IF . ( expression ) instruction ELSE instruction
    (               shift and go to state 62


state 18

    (35) variable -> reference .
    DIVASSIGN       reduce using rule 35 (variable -> reference .)
    MULASSIGN       reduce using rule 35 (variable -> reference .)
    SUBASSIGN       reduce using rule 35 (variable -> reference .)
    ADDASSIGN       reduce using rule 35 (variable -> reference .)
    =               reduce using rule 35 (variable -> reference .)
    [               reduce using rule 35 (variable -> reference .)
    NEQ             reduce using rule 35 (variable -> reference .)
    EQ              reduce using rule 35 (variable -> reference .)
    GRTEQ           reduce using rule 35 (variable -> reference .)
    LESEQ           reduce using rule 35 (variable -> reference .)
    >               reduce using rule 35 (variable -> reference .)
    <               reduce using rule 35 (variable -> reference .)
    /               reduce using rule 35 (variable -> reference .)
    *               reduce using rule 35 (variable -> reference .)
    -               reduce using rule 35 (variable -> reference .)
    +               reduce using rule 35 (variable -> reference .)
    DOTDIV          reduce using rule 35 (variable -> reference .)
    DOTMUL          reduce using rule 35 (variable -> reference .)
    DOTSUB          reduce using rule 35 (variable -> reference .)
    DOTADD          reduce using rule 35 (variable -> reference .)
    '               reduce using rule 35 (variable -> reference .)
    ,               reduce using rule 35 (variable -> reference .)
    ;               reduce using rule 35 (variable -> reference .)
    )               reduce using rule 35 (variable -> reference .)
    ]               reduce using rule 35 (variable -> reference .)
    :               reduce using rule 35 (variable -> reference .)
    RETURN          reduce using rule 35 (variable -> reference .)
    CONTINUE        reduce using rule 35 (variable -> reference .)
    BREAK           reduce using rule 35 (variable -> reference .)
    PRINT           reduce using rule 35 (variable -> reference .)
    {               reduce using rule 35 (variable -> reference .)
    FOR             reduce using rule 35 (variable -> reference .)
    WHILE           reduce using rule 35 (variable -> reference .)
    IF              reduce using rule 35 (variable -> reference .)
    ID              reduce using rule 35 (variable -> reference .)
    (               reduce using rule 35 (variable -> reference .)
    STRING          reduce using rule 35 (variable -> reference .)
    FLOATNUM        reduce using rule 35 (variable -> reference .)
    INTNUM          reduce using rule 35 (variable -> reference .)
    EYE             reduce using rule 35 (variable -> reference .)
    ONES            reduce using rule 35 (variable -> reference .)
    ZEROS           reduce using rule 35 (variable -> reference .)


state 19

    (36) variable -> ID .
    DIVASSIGN       reduce using rule 36 (variable -> ID .)
    MULASSIGN       reduce using rule 36 (variable -> ID .)
    SUBASSIGN       reduce using rule 36 (variable -> ID .)
    ADDASSIGN       reduce using rule 36 (variable -> ID .)
    =               reduce using rule 36 (variable -> ID .)
    [               reduce using rule 36 (variable -> ID .)
    NEQ             reduce using rule 36 (variable -> ID .)
    EQ              reduce using rule 36 (variable -> ID .)
    GRTEQ           reduce using rule 36 (variable -> ID .)
    LESEQ           reduce using rule 36 (variable -> ID .)
    >               reduce using rule 36 (variable -> ID .)
    <               reduce using rule 36 (variable -> ID .)
    /               reduce using rule 36 (variable -> ID .)
    *               reduce using rule 36 (variable -> ID .)
    -               reduce using rule 36 (variable -> ID .)
    +               reduce using rule 36 (variable -> ID .)
    DOTDIV          reduce using rule 36 (variable -> ID .)
    DOTMUL          reduce using rule 36 (variable -> ID .)
    DOTSUB          reduce using rule 36 (variable -> ID .)
    DOTADD          reduce using rule 36 (variable -> ID .)
    '               reduce using rule 36 (variable -> ID .)
    ,               reduce using rule 36 (variable -> ID .)
    ;               reduce using rule 36 (variable -> ID .)
    )               reduce using rule 36 (variable -> ID .)
    ]               reduce using rule 36 (variable -> ID .)
    :               reduce using rule 36 (variable -> ID .)
    RETURN          reduce using rule 36 (variable -> ID .)
    CONTINUE        reduce using rule 36 (variable -> ID .)
    BREAK           reduce using rule 36 (variable -> ID .)
    PRINT           reduce using rule 36 (variable -> ID .)
    {               reduce using rule 36 (variable -> ID .)
    FOR             reduce using rule 36 (variable -> ID .)
    WHILE           reduce using rule 36 (variable -> ID .)
    IF              reduce using rule 36 (variable -> ID .)
    ID              reduce using rule 36 (variable -> ID .)
    (               reduce using rule 36 (variable -> ID .)
    STRING          reduce using rule 36 (variable -> ID .)
    FLOATNUM        reduce using rule 36 (variable -> ID .)
    INTNUM          reduce using rule 36 (variable -> ID .)
    EYE             reduce using rule 36 (variable -> ID .)
    ONES            reduce using rule 36 (variable -> ID .)
    ZEROS           reduce using rule 36 (variable -> ID .)


state 20

    (18) expression -> [ . list ]
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 63
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 21

    (20) expression -> matrix_function .
    [               reduce using rule 20 (expression -> matrix_function .)
    NEQ             reduce using rule 20 (expression -> matrix_function .)
    EQ              reduce using rule 20 (expression -> matrix_function .)
    GRTEQ           reduce using rule 20 (expression -> matrix_function .)
    LESEQ           reduce using rule 20 (expression -> matrix_function .)
    >               reduce using rule 20 (expression -> matrix_function .)
    <               reduce using rule 20 (expression -> matrix_function .)
    /               reduce using rule 20 (expression -> matrix_function .)
    *               reduce using rule 20 (expression -> matrix_function .)
    -               reduce using rule 20 (expression -> matrix_function .)
    +               reduce using rule 20 (expression -> matrix_function .)
    DOTDIV          reduce using rule 20 (expression -> matrix_function .)
    DOTMUL          reduce using rule 20 (expression -> matrix_function .)
    DOTSUB          reduce using rule 20 (expression -> matrix_function .)
    DOTADD          reduce using rule 20 (expression -> matrix_function .)
    '               reduce using rule 20 (expression -> matrix_function .)
    ,               reduce using rule 20 (expression -> matrix_function .)
    ;               reduce using rule 20 (expression -> matrix_function .)
    )               reduce using rule 20 (expression -> matrix_function .)
    ]               reduce using rule 20 (expression -> matrix_function .)
    :               reduce using rule 20 (expression -> matrix_function .)
    RETURN          reduce using rule 20 (expression -> matrix_function .)
    CONTINUE        reduce using rule 20 (expression -> matrix_function .)
    BREAK           reduce using rule 20 (expression -> matrix_function .)
    PRINT           reduce using rule 20 (expression -> matrix_function .)
    {               reduce using rule 20 (expression -> matrix_function .)
    FOR             reduce using rule 20 (expression -> matrix_function .)
    WHILE           reduce using rule 20 (expression -> matrix_function .)
    IF              reduce using rule 20 (expression -> matrix_function .)
    ID              reduce using rule 20 (expression -> matrix_function .)
    (               reduce using rule 20 (expression -> matrix_function .)
    STRING          reduce using rule 20 (expression -> matrix_function .)
    FLOATNUM        reduce using rule 20 (expression -> matrix_function .)
    INTNUM          reduce using rule 20 (expression -> matrix_function .)
    EYE             reduce using rule 20 (expression -> matrix_function .)
    ONES            reduce using rule 20 (expression -> matrix_function .)
    ZEROS           reduce using rule 20 (expression -> matrix_function .)


state 22

    (34) expression -> - . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 64
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 23

    (30) expression -> STRING .
    [               reduce using rule 30 (expression -> STRING .)
    NEQ             reduce using rule 30 (expression -> STRING .)
    EQ              reduce using rule 30 (expression -> STRING .)
    GRTEQ           reduce using rule 30 (expression -> STRING .)
    LESEQ           reduce using rule 30 (expression -> STRING .)
    >               reduce using rule 30 (expression -> STRING .)
    <               reduce using rule 30 (expression -> STRING .)
    /               reduce using rule 30 (expression -> STRING .)
    *               reduce using rule 30 (expression -> STRING .)
    -               reduce using rule 30 (expression -> STRING .)
    +               reduce using rule 30 (expression -> STRING .)
    DOTDIV          reduce using rule 30 (expression -> STRING .)
    DOTMUL          reduce using rule 30 (expression -> STRING .)
    DOTSUB          reduce using rule 30 (expression -> STRING .)
    DOTADD          reduce using rule 30 (expression -> STRING .)
    '               reduce using rule 30 (expression -> STRING .)
    ,               reduce using rule 30 (expression -> STRING .)
    ;               reduce using rule 30 (expression -> STRING .)
    )               reduce using rule 30 (expression -> STRING .)
    ]               reduce using rule 30 (expression -> STRING .)
    :               reduce using rule 30 (expression -> STRING .)
    RETURN          reduce using rule 30 (expression -> STRING .)
    CONTINUE        reduce using rule 30 (expression -> STRING .)
    BREAK           reduce using rule 30 (expression -> STRING .)
    PRINT           reduce using rule 30 (expression -> STRING .)
    {               reduce using rule 30 (expression -> STRING .)
    FOR             reduce using rule 30 (expression -> STRING .)
    WHILE           reduce using rule 30 (expression -> STRING .)
    IF              reduce using rule 30 (expression -> STRING .)
    ID              reduce using rule 30 (expression -> STRING .)
    (               reduce using rule 30 (expression -> STRING .)
    STRING          reduce using rule 30 (expression -> STRING .)
    FLOATNUM        reduce using rule 30 (expression -> STRING .)
    INTNUM          reduce using rule 30 (expression -> STRING .)
    EYE             reduce using rule 30 (expression -> STRING .)
    ONES            reduce using rule 30 (expression -> STRING .)
    ZEROS           reduce using rule 30 (expression -> STRING .)


state 24

    (31) expression -> FLOATNUM .
    [               reduce using rule 31 (expression -> FLOATNUM .)
    NEQ             reduce using rule 31 (expression -> FLOATNUM .)
    EQ              reduce using rule 31 (expression -> FLOATNUM .)
    GRTEQ           reduce using rule 31 (expression -> FLOATNUM .)
    LESEQ           reduce using rule 31 (expression -> FLOATNUM .)
    >               reduce using rule 31 (expression -> FLOATNUM .)
    <               reduce using rule 31 (expression -> FLOATNUM .)
    /               reduce using rule 31 (expression -> FLOATNUM .)
    *               reduce using rule 31 (expression -> FLOATNUM .)
    -               reduce using rule 31 (expression -> FLOATNUM .)
    +               reduce using rule 31 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 31 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 31 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 31 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 31 (expression -> FLOATNUM .)
    '               reduce using rule 31 (expression -> FLOATNUM .)
    ,               reduce using rule 31 (expression -> FLOATNUM .)
    ;               reduce using rule 31 (expression -> FLOATNUM .)
    )               reduce using rule 31 (expression -> FLOATNUM .)
    ]               reduce using rule 31 (expression -> FLOATNUM .)
    :               reduce using rule 31 (expression -> FLOATNUM .)
    RETURN          reduce using rule 31 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 31 (expression -> FLOATNUM .)
    BREAK           reduce using rule 31 (expression -> FLOATNUM .)
    PRINT           reduce using rule 31 (expression -> FLOATNUM .)
    {               reduce using rule 31 (expression -> FLOATNUM .)
    FOR             reduce using rule 31 (expression -> FLOATNUM .)
    WHILE           reduce using rule 31 (expression -> FLOATNUM .)
    IF              reduce using rule 31 (expression -> FLOATNUM .)
    ID              reduce using rule 31 (expression -> FLOATNUM .)
    (               reduce using rule 31 (expression -> FLOATNUM .)
    STRING          reduce using rule 31 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 31 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 31 (expression -> FLOATNUM .)
    EYE             reduce using rule 31 (expression -> FLOATNUM .)
    ONES            reduce using rule 31 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 31 (expression -> FLOATNUM .)


state 25

    (32) expression -> INTNUM .
    [               reduce using rule 32 (expression -> INTNUM .)
    NEQ             reduce using rule 32 (expression -> INTNUM .)
    EQ              reduce using rule 32 (expression -> INTNUM .)
    GRTEQ           reduce using rule 32 (expression -> INTNUM .)
    LESEQ           reduce using rule 32 (expression -> INTNUM .)
    >               reduce using rule 32 (expression -> INTNUM .)
    <               reduce using rule 32 (expression -> INTNUM .)
    /               reduce using rule 32 (expression -> INTNUM .)
    *               reduce using rule 32 (expression -> INTNUM .)
    -               reduce using rule 32 (expression -> INTNUM .)
    +               reduce using rule 32 (expression -> INTNUM .)
    DOTDIV          reduce using rule 32 (expression -> INTNUM .)
    DOTMUL          reduce using rule 32 (expression -> INTNUM .)
    DOTSUB          reduce using rule 32 (expression -> INTNUM .)
    DOTADD          reduce using rule 32 (expression -> INTNUM .)
    '               reduce using rule 32 (expression -> INTNUM .)
    ,               reduce using rule 32 (expression -> INTNUM .)
    ;               reduce using rule 32 (expression -> INTNUM .)
    )               reduce using rule 32 (expression -> INTNUM .)
    ]               reduce using rule 32 (expression -> INTNUM .)
    :               reduce using rule 32 (expression -> INTNUM .)
    RETURN          reduce using rule 32 (expression -> INTNUM .)
    CONTINUE        reduce using rule 32 (expression -> INTNUM .)
    BREAK           reduce using rule 32 (expression -> INTNUM .)
    PRINT           reduce using rule 32 (expression -> INTNUM .)
    {               reduce using rule 32 (expression -> INTNUM .)
    FOR             reduce using rule 32 (expression -> INTNUM .)
    WHILE           reduce using rule 32 (expression -> INTNUM .)
    IF              reduce using rule 32 (expression -> INTNUM .)
    ID              reduce using rule 32 (expression -> INTNUM .)
    (               reduce using rule 32 (expression -> INTNUM .)
    STRING          reduce using rule 32 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 32 (expression -> INTNUM .)
    INTNUM          reduce using rule 32 (expression -> INTNUM .)
    EYE             reduce using rule 32 (expression -> INTNUM .)
    ONES            reduce using rule 32 (expression -> INTNUM .)
    ZEROS           reduce using rule 32 (expression -> INTNUM .)


state 26

    (45) matrix_function -> EYE . ( list )
    (               shift and go to state 65


state 27

    (46) matrix_function -> ONES . ( list )
    (               shift and go to state 66


state 28

    (47) matrix_function -> ZEROS . ( list )
    (               shift and go to state 67


state 29

    (2) instructions -> instruction instructions .
    $end            reduce using rule 2 (instructions -> instruction instructions .)
    }               reduce using rule 2 (instructions -> instruction instructions .)


state 30

    (4) instruction -> RETURN list . ;
    ;               shift and go to state 68


state 31

    (43) list -> expression .
    (44) list -> expression . , list
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 43 (list -> expression .)
    ]               reduce using rule 43 (list -> expression .)
    )               reduce using rule 43 (list -> expression .)
    ,               shift and go to state 69
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 32

    (29) expression -> variable .
    ,               reduce using rule 29 (expression -> variable .)
    NEQ             reduce using rule 29 (expression -> variable .)
    EQ              reduce using rule 29 (expression -> variable .)
    GRTEQ           reduce using rule 29 (expression -> variable .)
    LESEQ           reduce using rule 29 (expression -> variable .)
    >               reduce using rule 29 (expression -> variable .)
    <               reduce using rule 29 (expression -> variable .)
    /               reduce using rule 29 (expression -> variable .)
    *               reduce using rule 29 (expression -> variable .)
    -               reduce using rule 29 (expression -> variable .)
    +               reduce using rule 29 (expression -> variable .)
    DOTDIV          reduce using rule 29 (expression -> variable .)
    DOTMUL          reduce using rule 29 (expression -> variable .)
    DOTSUB          reduce using rule 29 (expression -> variable .)
    DOTADD          reduce using rule 29 (expression -> variable .)
    '               reduce using rule 29 (expression -> variable .)
    [               reduce using rule 29 (expression -> variable .)
    ;               reduce using rule 29 (expression -> variable .)
    )               reduce using rule 29 (expression -> variable .)
    ]               reduce using rule 29 (expression -> variable .)
    :               reduce using rule 29 (expression -> variable .)
    RETURN          reduce using rule 29 (expression -> variable .)
    CONTINUE        reduce using rule 29 (expression -> variable .)
    BREAK           reduce using rule 29 (expression -> variable .)
    PRINT           reduce using rule 29 (expression -> variable .)
    {               reduce using rule 29 (expression -> variable .)
    FOR             reduce using rule 29 (expression -> variable .)
    WHILE           reduce using rule 29 (expression -> variable .)
    IF              reduce using rule 29 (expression -> variable .)
    ID              reduce using rule 29 (expression -> variable .)
    (               reduce using rule 29 (expression -> variable .)
    STRING          reduce using rule 29 (expression -> variable .)
    FLOATNUM        reduce using rule 29 (expression -> variable .)
    INTNUM          reduce using rule 29 (expression -> variable .)
    EYE             reduce using rule 29 (expression -> variable .)
    ONES            reduce using rule 29 (expression -> variable .)
    ZEROS           reduce using rule 29 (expression -> variable .)


state 33

    (5) instruction -> CONTINUE ; .
    RETURN          reduce using rule 5 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 5 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 5 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 5 (instruction -> CONTINUE ; .)
    {               reduce using rule 5 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 5 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 5 (instruction -> CONTINUE ; .)
    IF              reduce using rule 5 (instruction -> CONTINUE ; .)
    ID              reduce using rule 5 (instruction -> CONTINUE ; .)
    [               reduce using rule 5 (instruction -> CONTINUE ; .)
    (               reduce using rule 5 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 5 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 5 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 5 (instruction -> CONTINUE ; .)
    -               reduce using rule 5 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 5 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 5 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 5 (instruction -> CONTINUE ; .)
    $end            reduce using rule 5 (instruction -> CONTINUE ; .)
    }               reduce using rule 5 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 5 (instruction -> CONTINUE ; .)


state 34

    (6) instruction -> BREAK ; .
    RETURN          reduce using rule 6 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 6 (instruction -> BREAK ; .)
    BREAK           reduce using rule 6 (instruction -> BREAK ; .)
    PRINT           reduce using rule 6 (instruction -> BREAK ; .)
    {               reduce using rule 6 (instruction -> BREAK ; .)
    FOR             reduce using rule 6 (instruction -> BREAK ; .)
    WHILE           reduce using rule 6 (instruction -> BREAK ; .)
    IF              reduce using rule 6 (instruction -> BREAK ; .)
    ID              reduce using rule 6 (instruction -> BREAK ; .)
    [               reduce using rule 6 (instruction -> BREAK ; .)
    (               reduce using rule 6 (instruction -> BREAK ; .)
    STRING          reduce using rule 6 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 6 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 6 (instruction -> BREAK ; .)
    -               reduce using rule 6 (instruction -> BREAK ; .)
    EYE             reduce using rule 6 (instruction -> BREAK ; .)
    ONES            reduce using rule 6 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 6 (instruction -> BREAK ; .)
    $end            reduce using rule 6 (instruction -> BREAK ; .)
    }               reduce using rule 6 (instruction -> BREAK ; .)
    ELSE            reduce using rule 6 (instruction -> BREAK ; .)


state 35

    (7) instruction -> PRINT list . ;
    ;               shift and go to state 70


state 36

    (10) instruction -> assignment ; .
    RETURN          reduce using rule 10 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 10 (instruction -> assignment ; .)
    BREAK           reduce using rule 10 (instruction -> assignment ; .)
    PRINT           reduce using rule 10 (instruction -> assignment ; .)
    {               reduce using rule 10 (instruction -> assignment ; .)
    FOR             reduce using rule 10 (instruction -> assignment ; .)
    WHILE           reduce using rule 10 (instruction -> assignment ; .)
    IF              reduce using rule 10 (instruction -> assignment ; .)
    ID              reduce using rule 10 (instruction -> assignment ; .)
    [               reduce using rule 10 (instruction -> assignment ; .)
    (               reduce using rule 10 (instruction -> assignment ; .)
    STRING          reduce using rule 10 (instruction -> assignment ; .)
    FLOATNUM        reduce using rule 10 (instruction -> assignment ; .)
    INTNUM          reduce using rule 10 (instruction -> assignment ; .)
    -               reduce using rule 10 (instruction -> assignment ; .)
    EYE             reduce using rule 10 (instruction -> assignment ; .)
    ONES            reduce using rule 10 (instruction -> assignment ; .)
    ZEROS           reduce using rule 10 (instruction -> assignment ; .)
    $end            reduce using rule 10 (instruction -> assignment ; .)
    }               reduce using rule 10 (instruction -> assignment ; .)
    ELSE            reduce using rule 10 (instruction -> assignment ; .)


state 37

    (11) instruction -> { instructions . }
    }               shift and go to state 71


state 38

    (50) loop -> FOR variable . = range instruction
    (29) expression -> variable .
    =               shift and go to state 72
    [               reduce using rule 29 (expression -> variable .)
    NEQ             reduce using rule 29 (expression -> variable .)
    EQ              reduce using rule 29 (expression -> variable .)
    GRTEQ           reduce using rule 29 (expression -> variable .)
    LESEQ           reduce using rule 29 (expression -> variable .)
    >               reduce using rule 29 (expression -> variable .)
    <               reduce using rule 29 (expression -> variable .)
    /               reduce using rule 29 (expression -> variable .)
    *               reduce using rule 29 (expression -> variable .)
    -               reduce using rule 29 (expression -> variable .)
    +               reduce using rule 29 (expression -> variable .)
    DOTDIV          reduce using rule 29 (expression -> variable .)
    DOTMUL          reduce using rule 29 (expression -> variable .)
    DOTSUB          reduce using rule 29 (expression -> variable .)
    DOTADD          reduce using rule 29 (expression -> variable .)
    '               reduce using rule 29 (expression -> variable .)


state 39

    (37) assignment -> variable DIVASSIGN . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    expression                     shift and go to state 73
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 40

    (38) assignment -> variable MULASSIGN . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    expression                     shift and go to state 74
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 41

    (39) assignment -> variable SUBASSIGN . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    expression                     shift and go to state 75
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 42

    (40) assignment -> variable ADDASSIGN . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    expression                     shift and go to state 76
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 43

    (41) assignment -> variable = . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    expression                     shift and go to state 77
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 44

    (51) loop -> WHILE ( . expression ) instruction
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 78
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 45

    (19) expression -> ( expression . )
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    )               shift and go to state 79
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 46

    (42) reference -> expression [ . expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 80
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 47

    (12) expression -> expression NEQ . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 81
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 48

    (13) expression -> expression EQ . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 82
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 49

    (14) expression -> expression GRTEQ . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 83
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 50

    (15) expression -> expression LESEQ . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 84
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 51

    (16) expression -> expression > . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 85
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 52

    (17) expression -> expression < . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 86
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 53

    (21) expression -> expression / . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 87
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 54

    (22) expression -> expression * . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 88
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 55

    (23) expression -> expression - . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 89
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 56

    (24) expression -> expression + . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 90
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 57

    (25) expression -> expression DOTDIV . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 91
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 58

    (26) expression -> expression DOTMUL . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 92
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 59

    (27) expression -> expression DOTSUB . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 93
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 60

    (28) expression -> expression DOTADD . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 94
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 61

    (33) expression -> expression ' .
    [               reduce using rule 33 (expression -> expression ' .)
    NEQ             reduce using rule 33 (expression -> expression ' .)
    EQ              reduce using rule 33 (expression -> expression ' .)
    GRTEQ           reduce using rule 33 (expression -> expression ' .)
    LESEQ           reduce using rule 33 (expression -> expression ' .)
    >               reduce using rule 33 (expression -> expression ' .)
    <               reduce using rule 33 (expression -> expression ' .)
    /               reduce using rule 33 (expression -> expression ' .)
    *               reduce using rule 33 (expression -> expression ' .)
    -               reduce using rule 33 (expression -> expression ' .)
    +               reduce using rule 33 (expression -> expression ' .)
    DOTDIV          reduce using rule 33 (expression -> expression ' .)
    DOTMUL          reduce using rule 33 (expression -> expression ' .)
    DOTSUB          reduce using rule 33 (expression -> expression ' .)
    DOTADD          reduce using rule 33 (expression -> expression ' .)
    '               reduce using rule 33 (expression -> expression ' .)
    ,               reduce using rule 33 (expression -> expression ' .)
    ;               reduce using rule 33 (expression -> expression ' .)
    )               reduce using rule 33 (expression -> expression ' .)
    ]               reduce using rule 33 (expression -> expression ' .)
    :               reduce using rule 33 (expression -> expression ' .)
    RETURN          reduce using rule 33 (expression -> expression ' .)
    CONTINUE        reduce using rule 33 (expression -> expression ' .)
    BREAK           reduce using rule 33 (expression -> expression ' .)
    PRINT           reduce using rule 33 (expression -> expression ' .)
    {               reduce using rule 33 (expression -> expression ' .)
    FOR             reduce using rule 33 (expression -> expression ' .)
    WHILE           reduce using rule 33 (expression -> expression ' .)
    IF              reduce using rule 33 (expression -> expression ' .)
    ID              reduce using rule 33 (expression -> expression ' .)
    (               reduce using rule 33 (expression -> expression ' .)
    STRING          reduce using rule 33 (expression -> expression ' .)
    FLOATNUM        reduce using rule 33 (expression -> expression ' .)
    INTNUM          reduce using rule 33 (expression -> expression ' .)
    EYE             reduce using rule 33 (expression -> expression ' .)
    ONES            reduce using rule 33 (expression -> expression ' .)
    ZEROS           reduce using rule 33 (expression -> expression ' .)


state 62

    (48) conditional -> IF ( . expression ) instruction
    (49) conditional -> IF ( . expression ) instruction ELSE instruction
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 95
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 63

    (18) expression -> [ list . ]
    ]               shift and go to state 96


state 64

    (34) expression -> - expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 34 (expression -> - expression .)
    NEQ             reduce using rule 34 (expression -> - expression .)
    EQ              reduce using rule 34 (expression -> - expression .)
    GRTEQ           reduce using rule 34 (expression -> - expression .)
    LESEQ           reduce using rule 34 (expression -> - expression .)
    >               reduce using rule 34 (expression -> - expression .)
    <               reduce using rule 34 (expression -> - expression .)
    /               reduce using rule 34 (expression -> - expression .)
    *               reduce using rule 34 (expression -> - expression .)
    -               reduce using rule 34 (expression -> - expression .)
    +               reduce using rule 34 (expression -> - expression .)
    DOTDIV          reduce using rule 34 (expression -> - expression .)
    DOTMUL          reduce using rule 34 (expression -> - expression .)
    DOTSUB          reduce using rule 34 (expression -> - expression .)
    DOTADD          reduce using rule 34 (expression -> - expression .)
    ,               reduce using rule 34 (expression -> - expression .)
    ;               reduce using rule 34 (expression -> - expression .)
    )               reduce using rule 34 (expression -> - expression .)
    ]               reduce using rule 34 (expression -> - expression .)
    :               reduce using rule 34 (expression -> - expression .)
    RETURN          reduce using rule 34 (expression -> - expression .)
    CONTINUE        reduce using rule 34 (expression -> - expression .)
    BREAK           reduce using rule 34 (expression -> - expression .)
    PRINT           reduce using rule 34 (expression -> - expression .)
    {               reduce using rule 34 (expression -> - expression .)
    FOR             reduce using rule 34 (expression -> - expression .)
    WHILE           reduce using rule 34 (expression -> - expression .)
    IF              reduce using rule 34 (expression -> - expression .)
    ID              reduce using rule 34 (expression -> - expression .)
    (               reduce using rule 34 (expression -> - expression .)
    STRING          reduce using rule 34 (expression -> - expression .)
    FLOATNUM        reduce using rule 34 (expression -> - expression .)
    INTNUM          reduce using rule 34 (expression -> - expression .)
    EYE             reduce using rule 34 (expression -> - expression .)
    ONES            reduce using rule 34 (expression -> - expression .)
    ZEROS           reduce using rule 34 (expression -> - expression .)
    '               shift and go to state 61


state 65

    (45) matrix_function -> EYE ( . list )
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 97
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 66

    (46) matrix_function -> ONES ( . list )
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 98
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 67

    (47) matrix_function -> ZEROS ( . list )
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    list                           shift and go to state 99
    expression                     shift and go to state 31
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 68

    (4) instruction -> RETURN list ; .
    RETURN          reduce using rule 4 (instruction -> RETURN list ; .)
    CONTINUE        reduce using rule 4 (instruction -> RETURN list ; .)
    BREAK           reduce using rule 4 (instruction -> RETURN list ; .)
    PRINT           reduce using rule 4 (instruction -> RETURN list ; .)
    {               reduce using rule 4 (instruction -> RETURN list ; .)
    FOR             reduce using rule 4 (instruction -> RETURN list ; .)
    WHILE           reduce using rule 4 (instruction -> RETURN list ; .)
    IF              reduce using rule 4 (instruction -> RETURN list ; .)
    ID              reduce using rule 4 (instruction -> RETURN list ; .)
    [               reduce using rule 4 (instruction -> RETURN list ; .)
    (               reduce using rule 4 (instruction -> RETURN list ; .)
    STRING          reduce using rule 4 (instruction -> RETURN list ; .)
    FLOATNUM        reduce using rule 4 (instruction -> RETURN list ; .)
    INTNUM          reduce using rule 4 (instruction -> RETURN list ; .)
    -               reduce using rule 4 (instruction -> RETURN list ; .)
    EYE             reduce using rule 4 (instruction -> RETURN list ; .)
    ONES            reduce using rule 4 (instruction -> RETURN list ; .)
    ZEROS           reduce using rule 4 (instruction -> RETURN list ; .)
    $end            reduce using rule 4 (instruction -> RETURN list ; .)
    }               reduce using rule 4 (instruction -> RETURN list ; .)
    ELSE            reduce using rule 4 (instruction -> RETURN list ; .)


state 69

    (44) list -> expression , . list
    (43) list -> . expression
    (44) list -> . expression , list
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 31
    list                           shift and go to state 100
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 70

    (7) instruction -> PRINT list ; .
    RETURN          reduce using rule 7 (instruction -> PRINT list ; .)
    CONTINUE        reduce using rule 7 (instruction -> PRINT list ; .)
    BREAK           reduce using rule 7 (instruction -> PRINT list ; .)
    PRINT           reduce using rule 7 (instruction -> PRINT list ; .)
    {               reduce using rule 7 (instruction -> PRINT list ; .)
    FOR             reduce using rule 7 (instruction -> PRINT list ; .)
    WHILE           reduce using rule 7 (instruction -> PRINT list ; .)
    IF              reduce using rule 7 (instruction -> PRINT list ; .)
    ID              reduce using rule 7 (instruction -> PRINT list ; .)
    [               reduce using rule 7 (instruction -> PRINT list ; .)
    (               reduce using rule 7 (instruction -> PRINT list ; .)
    STRING          reduce using rule 7 (instruction -> PRINT list ; .)
    FLOATNUM        reduce using rule 7 (instruction -> PRINT list ; .)
    INTNUM          reduce using rule 7 (instruction -> PRINT list ; .)
    -               reduce using rule 7 (instruction -> PRINT list ; .)
    EYE             reduce using rule 7 (instruction -> PRINT list ; .)
    ONES            reduce using rule 7 (instruction -> PRINT list ; .)
    ZEROS           reduce using rule 7 (instruction -> PRINT list ; .)
    $end            reduce using rule 7 (instruction -> PRINT list ; .)
    }               reduce using rule 7 (instruction -> PRINT list ; .)
    ELSE            reduce using rule 7 (instruction -> PRINT list ; .)


state 71

    (11) instruction -> { instructions } .
    RETURN          reduce using rule 11 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 11 (instruction -> { instructions } .)
    BREAK           reduce using rule 11 (instruction -> { instructions } .)
    PRINT           reduce using rule 11 (instruction -> { instructions } .)
    {               reduce using rule 11 (instruction -> { instructions } .)
    FOR             reduce using rule 11 (instruction -> { instructions } .)
    WHILE           reduce using rule 11 (instruction -> { instructions } .)
    IF              reduce using rule 11 (instruction -> { instructions } .)
    ID              reduce using rule 11 (instruction -> { instructions } .)
    [               reduce using rule 11 (instruction -> { instructions } .)
    (               reduce using rule 11 (instruction -> { instructions } .)
    STRING          reduce using rule 11 (instruction -> { instructions } .)
    FLOATNUM        reduce using rule 11 (instruction -> { instructions } .)
    INTNUM          reduce using rule 11 (instruction -> { instructions } .)
    -               reduce using rule 11 (instruction -> { instructions } .)
    EYE             reduce using rule 11 (instruction -> { instructions } .)
    ONES            reduce using rule 11 (instruction -> { instructions } .)
    ZEROS           reduce using rule 11 (instruction -> { instructions } .)
    $end            reduce using rule 11 (instruction -> { instructions } .)
    }               reduce using rule 11 (instruction -> { instructions } .)
    ELSE            reduce using rule 11 (instruction -> { instructions } .)


state 72

    (50) loop -> FOR variable = . range instruction
    (52) range -> . expression : expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    variable                       shift and go to state 32
    range                          shift and go to state 101
    expression                     shift and go to state 102
    matrix_function                shift and go to state 21
    reference                      shift and go to state 18

state 73

    (37) assignment -> variable DIVASSIGN expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 37 (assignment -> variable DIVASSIGN expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 74

    (38) assignment -> variable MULASSIGN expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 38 (assignment -> variable MULASSIGN expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 75

    (39) assignment -> variable SUBASSIGN expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 39 (assignment -> variable SUBASSIGN expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 76

    (40) assignment -> variable ADDASSIGN expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 40 (assignment -> variable ADDASSIGN expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 77

    (41) assignment -> variable = expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ;               reduce using rule 41 (assignment -> variable = expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 78

    (51) loop -> WHILE ( expression . ) instruction
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    )               shift and go to state 103
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 79

    (19) expression -> ( expression ) .
    [               reduce using rule 19 (expression -> ( expression ) .)
    NEQ             reduce using rule 19 (expression -> ( expression ) .)
    EQ              reduce using rule 19 (expression -> ( expression ) .)
    GRTEQ           reduce using rule 19 (expression -> ( expression ) .)
    LESEQ           reduce using rule 19 (expression -> ( expression ) .)
    >               reduce using rule 19 (expression -> ( expression ) .)
    <               reduce using rule 19 (expression -> ( expression ) .)
    /               reduce using rule 19 (expression -> ( expression ) .)
    *               reduce using rule 19 (expression -> ( expression ) .)
    -               reduce using rule 19 (expression -> ( expression ) .)
    +               reduce using rule 19 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 19 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 19 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 19 (expression -> ( expression ) .)
    DOTADD          reduce using rule 19 (expression -> ( expression ) .)
    '               reduce using rule 19 (expression -> ( expression ) .)
    ,               reduce using rule 19 (expression -> ( expression ) .)
    ;               reduce using rule 19 (expression -> ( expression ) .)
    )               reduce using rule 19 (expression -> ( expression ) .)
    ]               reduce using rule 19 (expression -> ( expression ) .)
    :               reduce using rule 19 (expression -> ( expression ) .)
    RETURN          reduce using rule 19 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 19 (expression -> ( expression ) .)
    BREAK           reduce using rule 19 (expression -> ( expression ) .)
    PRINT           reduce using rule 19 (expression -> ( expression ) .)
    {               reduce using rule 19 (expression -> ( expression ) .)
    FOR             reduce using rule 19 (expression -> ( expression ) .)
    WHILE           reduce using rule 19 (expression -> ( expression ) .)
    IF              reduce using rule 19 (expression -> ( expression ) .)
    ID              reduce using rule 19 (expression -> ( expression ) .)
    (               reduce using rule 19 (expression -> ( expression ) .)
    STRING          reduce using rule 19 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 19 (expression -> ( expression ) .)
    INTNUM          reduce using rule 19 (expression -> ( expression ) .)
    EYE             reduce using rule 19 (expression -> ( expression ) .)
    ONES            reduce using rule 19 (expression -> ( expression ) .)
    ZEROS           reduce using rule 19 (expression -> ( expression ) .)


state 80

    (42) reference -> expression [ expression . , expression ]
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ,               shift and go to state 104
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 81

    (12) expression -> expression NEQ expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 12 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 12 (expression -> expression NEQ expression .)
    EQ              reduce using rule 12 (expression -> expression NEQ expression .)
    GRTEQ           reduce using rule 12 (expression -> expression NEQ expression .)
    LESEQ           reduce using rule 12 (expression -> expression NEQ expression .)
    >               reduce using rule 12 (expression -> expression NEQ expression .)
    <               reduce using rule 12 (expression -> expression NEQ expression .)
    ,               reduce using rule 12 (expression -> expression NEQ expression .)
    ;               reduce using rule 12 (expression -> expression NEQ expression .)
    )               reduce using rule 12 (expression -> expression NEQ expression .)
    ]               reduce using rule 12 (expression -> expression NEQ expression .)
    :               reduce using rule 12 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 12 (expression -> expression NEQ expression .)
    CONTINUE        reduce using rule 12 (expression -> expression NEQ expression .)
    BREAK           reduce using rule 12 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 12 (expression -> expression NEQ expression .)
    {               reduce using rule 12 (expression -> expression NEQ expression .)
    FOR             reduce using rule 12 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 12 (expression -> expression NEQ expression .)
    IF              reduce using rule 12 (expression -> expression NEQ expression .)
    ID              reduce using rule 12 (expression -> expression NEQ expression .)
    (               reduce using rule 12 (expression -> expression NEQ expression .)
    STRING          reduce using rule 12 (expression -> expression NEQ expression .)
    FLOATNUM        reduce using rule 12 (expression -> expression NEQ expression .)
    INTNUM          reduce using rule 12 (expression -> expression NEQ expression .)
    EYE             reduce using rule 12 (expression -> expression NEQ expression .)
    ONES            reduce using rule 12 (expression -> expression NEQ expression .)
    ZEROS           reduce using rule 12 (expression -> expression NEQ expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 82

    (13) expression -> expression EQ expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 13 (expression -> expression EQ expression .)
    NEQ             reduce using rule 13 (expression -> expression EQ expression .)
    EQ              reduce using rule 13 (expression -> expression EQ expression .)
    GRTEQ           reduce using rule 13 (expression -> expression EQ expression .)
    LESEQ           reduce using rule 13 (expression -> expression EQ expression .)
    >               reduce using rule 13 (expression -> expression EQ expression .)
    <               reduce using rule 13 (expression -> expression EQ expression .)
    ,               reduce using rule 13 (expression -> expression EQ expression .)
    ;               reduce using rule 13 (expression -> expression EQ expression .)
    )               reduce using rule 13 (expression -> expression EQ expression .)
    ]               reduce using rule 13 (expression -> expression EQ expression .)
    :               reduce using rule 13 (expression -> expression EQ expression .)
    RETURN          reduce using rule 13 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 13 (expression -> expression EQ expression .)
    BREAK           reduce using rule 13 (expression -> expression EQ expression .)
    PRINT           reduce using rule 13 (expression -> expression EQ expression .)
    {               reduce using rule 13 (expression -> expression EQ expression .)
    FOR             reduce using rule 13 (expression -> expression EQ expression .)
    WHILE           reduce using rule 13 (expression -> expression EQ expression .)
    IF              reduce using rule 13 (expression -> expression EQ expression .)
    ID              reduce using rule 13 (expression -> expression EQ expression .)
    (               reduce using rule 13 (expression -> expression EQ expression .)
    STRING          reduce using rule 13 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 13 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 13 (expression -> expression EQ expression .)
    EYE             reduce using rule 13 (expression -> expression EQ expression .)
    ONES            reduce using rule 13 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 13 (expression -> expression EQ expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 83

    (14) expression -> expression GRTEQ expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 14 (expression -> expression GRTEQ expression .)
    NEQ             reduce using rule 14 (expression -> expression GRTEQ expression .)
    EQ              reduce using rule 14 (expression -> expression GRTEQ expression .)
    GRTEQ           reduce using rule 14 (expression -> expression GRTEQ expression .)
    LESEQ           reduce using rule 14 (expression -> expression GRTEQ expression .)
    >               reduce using rule 14 (expression -> expression GRTEQ expression .)
    <               reduce using rule 14 (expression -> expression GRTEQ expression .)
    ,               reduce using rule 14 (expression -> expression GRTEQ expression .)
    ;               reduce using rule 14 (expression -> expression GRTEQ expression .)
    )               reduce using rule 14 (expression -> expression GRTEQ expression .)
    ]               reduce using rule 14 (expression -> expression GRTEQ expression .)
    :               reduce using rule 14 (expression -> expression GRTEQ expression .)
    RETURN          reduce using rule 14 (expression -> expression GRTEQ expression .)
    CONTINUE        reduce using rule 14 (expression -> expression GRTEQ expression .)
    BREAK           reduce using rule 14 (expression -> expression GRTEQ expression .)
    PRINT           reduce using rule 14 (expression -> expression GRTEQ expression .)
    {               reduce using rule 14 (expression -> expression GRTEQ expression .)
    FOR             reduce using rule 14 (expression -> expression GRTEQ expression .)
    WHILE           reduce using rule 14 (expression -> expression GRTEQ expression .)
    IF              reduce using rule 14 (expression -> expression GRTEQ expression .)
    ID              reduce using rule 14 (expression -> expression GRTEQ expression .)
    (               reduce using rule 14 (expression -> expression GRTEQ expression .)
    STRING          reduce using rule 14 (expression -> expression GRTEQ expression .)
    FLOATNUM        reduce using rule 14 (expression -> expression GRTEQ expression .)
    INTNUM          reduce using rule 14 (expression -> expression GRTEQ expression .)
    EYE             reduce using rule 14 (expression -> expression GRTEQ expression .)
    ONES            reduce using rule 14 (expression -> expression GRTEQ expression .)
    ZEROS           reduce using rule 14 (expression -> expression GRTEQ expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 84

    (15) expression -> expression LESEQ expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 15 (expression -> expression LESEQ expression .)
    NEQ             reduce using rule 15 (expression -> expression LESEQ expression .)
    EQ              reduce using rule 15 (expression -> expression LESEQ expression .)
    GRTEQ           reduce using rule 15 (expression -> expression LESEQ expression .)
    LESEQ           reduce using rule 15 (expression -> expression LESEQ expression .)
    >               reduce using rule 15 (expression -> expression LESEQ expression .)
    <               reduce using rule 15 (expression -> expression LESEQ expression .)
    ,               reduce using rule 15 (expression -> expression LESEQ expression .)
    ;               reduce using rule 15 (expression -> expression LESEQ expression .)
    )               reduce using rule 15 (expression -> expression LESEQ expression .)
    ]               reduce using rule 15 (expression -> expression LESEQ expression .)
    :               reduce using rule 15 (expression -> expression LESEQ expression .)
    RETURN          reduce using rule 15 (expression -> expression LESEQ expression .)
    CONTINUE        reduce using rule 15 (expression -> expression LESEQ expression .)
    BREAK           reduce using rule 15 (expression -> expression LESEQ expression .)
    PRINT           reduce using rule 15 (expression -> expression LESEQ expression .)
    {               reduce using rule 15 (expression -> expression LESEQ expression .)
    FOR             reduce using rule 15 (expression -> expression LESEQ expression .)
    WHILE           reduce using rule 15 (expression -> expression LESEQ expression .)
    IF              reduce using rule 15 (expression -> expression LESEQ expression .)
    ID              reduce using rule 15 (expression -> expression LESEQ expression .)
    (               reduce using rule 15 (expression -> expression LESEQ expression .)
    STRING          reduce using rule 15 (expression -> expression LESEQ expression .)
    FLOATNUM        reduce using rule 15 (expression -> expression LESEQ expression .)
    INTNUM          reduce using rule 15 (expression -> expression LESEQ expression .)
    EYE             reduce using rule 15 (expression -> expression LESEQ expression .)
    ONES            reduce using rule 15 (expression -> expression LESEQ expression .)
    ZEROS           reduce using rule 15 (expression -> expression LESEQ expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 85

    (16) expression -> expression > expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 16 (expression -> expression > expression .)
    NEQ             reduce using rule 16 (expression -> expression > expression .)
    EQ              reduce using rule 16 (expression -> expression > expression .)
    GRTEQ           reduce using rule 16 (expression -> expression > expression .)
    LESEQ           reduce using rule 16 (expression -> expression > expression .)
    >               reduce using rule 16 (expression -> expression > expression .)
    <               reduce using rule 16 (expression -> expression > expression .)
    ,               reduce using rule 16 (expression -> expression > expression .)
    ;               reduce using rule 16 (expression -> expression > expression .)
    )               reduce using rule 16 (expression -> expression > expression .)
    ]               reduce using rule 16 (expression -> expression > expression .)
    :               reduce using rule 16 (expression -> expression > expression .)
    RETURN          reduce using rule 16 (expression -> expression > expression .)
    CONTINUE        reduce using rule 16 (expression -> expression > expression .)
    BREAK           reduce using rule 16 (expression -> expression > expression .)
    PRINT           reduce using rule 16 (expression -> expression > expression .)
    {               reduce using rule 16 (expression -> expression > expression .)
    FOR             reduce using rule 16 (expression -> expression > expression .)
    WHILE           reduce using rule 16 (expression -> expression > expression .)
    IF              reduce using rule 16 (expression -> expression > expression .)
    ID              reduce using rule 16 (expression -> expression > expression .)
    (               reduce using rule 16 (expression -> expression > expression .)
    STRING          reduce using rule 16 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 16 (expression -> expression > expression .)
    INTNUM          reduce using rule 16 (expression -> expression > expression .)
    EYE             reduce using rule 16 (expression -> expression > expression .)
    ONES            reduce using rule 16 (expression -> expression > expression .)
    ZEROS           reduce using rule 16 (expression -> expression > expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 86

    (17) expression -> expression < expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 17 (expression -> expression < expression .)
    NEQ             reduce using rule 17 (expression -> expression < expression .)
    EQ              reduce using rule 17 (expression -> expression < expression .)
    GRTEQ           reduce using rule 17 (expression -> expression < expression .)
    LESEQ           reduce using rule 17 (expression -> expression < expression .)
    >               reduce using rule 17 (expression -> expression < expression .)
    <               reduce using rule 17 (expression -> expression < expression .)
    ,               reduce using rule 17 (expression -> expression < expression .)
    ;               reduce using rule 17 (expression -> expression < expression .)
    )               reduce using rule 17 (expression -> expression < expression .)
    ]               reduce using rule 17 (expression -> expression < expression .)
    :               reduce using rule 17 (expression -> expression < expression .)
    RETURN          reduce using rule 17 (expression -> expression < expression .)
    CONTINUE        reduce using rule 17 (expression -> expression < expression .)
    BREAK           reduce using rule 17 (expression -> expression < expression .)
    PRINT           reduce using rule 17 (expression -> expression < expression .)
    {               reduce using rule 17 (expression -> expression < expression .)
    FOR             reduce using rule 17 (expression -> expression < expression .)
    WHILE           reduce using rule 17 (expression -> expression < expression .)
    IF              reduce using rule 17 (expression -> expression < expression .)
    ID              reduce using rule 17 (expression -> expression < expression .)
    (               reduce using rule 17 (expression -> expression < expression .)
    STRING          reduce using rule 17 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression < expression .)
    INTNUM          reduce using rule 17 (expression -> expression < expression .)
    EYE             reduce using rule 17 (expression -> expression < expression .)
    ONES            reduce using rule 17 (expression -> expression < expression .)
    ZEROS           reduce using rule 17 (expression -> expression < expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 87

    (21) expression -> expression / expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 21 (expression -> expression / expression .)
    NEQ             reduce using rule 21 (expression -> expression / expression .)
    EQ              reduce using rule 21 (expression -> expression / expression .)
    GRTEQ           reduce using rule 21 (expression -> expression / expression .)
    LESEQ           reduce using rule 21 (expression -> expression / expression .)
    >               reduce using rule 21 (expression -> expression / expression .)
    <               reduce using rule 21 (expression -> expression / expression .)
    /               reduce using rule 21 (expression -> expression / expression .)
    *               reduce using rule 21 (expression -> expression / expression .)
    -               reduce using rule 21 (expression -> expression / expression .)
    +               reduce using rule 21 (expression -> expression / expression .)
    DOTDIV          reduce using rule 21 (expression -> expression / expression .)
    DOTMUL          reduce using rule 21 (expression -> expression / expression .)
    DOTSUB          reduce using rule 21 (expression -> expression / expression .)
    DOTADD          reduce using rule 21 (expression -> expression / expression .)
    ,               reduce using rule 21 (expression -> expression / expression .)
    ;               reduce using rule 21 (expression -> expression / expression .)
    )               reduce using rule 21 (expression -> expression / expression .)
    ]               reduce using rule 21 (expression -> expression / expression .)
    :               reduce using rule 21 (expression -> expression / expression .)
    RETURN          reduce using rule 21 (expression -> expression / expression .)
    CONTINUE        reduce using rule 21 (expression -> expression / expression .)
    BREAK           reduce using rule 21 (expression -> expression / expression .)
    PRINT           reduce using rule 21 (expression -> expression / expression .)
    {               reduce using rule 21 (expression -> expression / expression .)
    FOR             reduce using rule 21 (expression -> expression / expression .)
    WHILE           reduce using rule 21 (expression -> expression / expression .)
    IF              reduce using rule 21 (expression -> expression / expression .)
    ID              reduce using rule 21 (expression -> expression / expression .)
    (               reduce using rule 21 (expression -> expression / expression .)
    STRING          reduce using rule 21 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression / expression .)
    INTNUM          reduce using rule 21 (expression -> expression / expression .)
    EYE             reduce using rule 21 (expression -> expression / expression .)
    ONES            reduce using rule 21 (expression -> expression / expression .)
    ZEROS           reduce using rule 21 (expression -> expression / expression .)
    '               shift and go to state 61


state 88

    (22) expression -> expression * expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 22 (expression -> expression * expression .)
    NEQ             reduce using rule 22 (expression -> expression * expression .)
    EQ              reduce using rule 22 (expression -> expression * expression .)
    GRTEQ           reduce using rule 22 (expression -> expression * expression .)
    LESEQ           reduce using rule 22 (expression -> expression * expression .)
    >               reduce using rule 22 (expression -> expression * expression .)
    <               reduce using rule 22 (expression -> expression * expression .)
    /               reduce using rule 22 (expression -> expression * expression .)
    *               reduce using rule 22 (expression -> expression * expression .)
    -               reduce using rule 22 (expression -> expression * expression .)
    +               reduce using rule 22 (expression -> expression * expression .)
    DOTDIV          reduce using rule 22 (expression -> expression * expression .)
    DOTMUL          reduce using rule 22 (expression -> expression * expression .)
    DOTSUB          reduce using rule 22 (expression -> expression * expression .)
    DOTADD          reduce using rule 22 (expression -> expression * expression .)
    ,               reduce using rule 22 (expression -> expression * expression .)
    ;               reduce using rule 22 (expression -> expression * expression .)
    )               reduce using rule 22 (expression -> expression * expression .)
    ]               reduce using rule 22 (expression -> expression * expression .)
    :               reduce using rule 22 (expression -> expression * expression .)
    RETURN          reduce using rule 22 (expression -> expression * expression .)
    CONTINUE        reduce using rule 22 (expression -> expression * expression .)
    BREAK           reduce using rule 22 (expression -> expression * expression .)
    PRINT           reduce using rule 22 (expression -> expression * expression .)
    {               reduce using rule 22 (expression -> expression * expression .)
    FOR             reduce using rule 22 (expression -> expression * expression .)
    WHILE           reduce using rule 22 (expression -> expression * expression .)
    IF              reduce using rule 22 (expression -> expression * expression .)
    ID              reduce using rule 22 (expression -> expression * expression .)
    (               reduce using rule 22 (expression -> expression * expression .)
    STRING          reduce using rule 22 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 22 (expression -> expression * expression .)
    INTNUM          reduce using rule 22 (expression -> expression * expression .)
    EYE             reduce using rule 22 (expression -> expression * expression .)
    ONES            reduce using rule 22 (expression -> expression * expression .)
    ZEROS           reduce using rule 22 (expression -> expression * expression .)
    '               shift and go to state 61


state 89

    (23) expression -> expression - expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 23 (expression -> expression - expression .)
    NEQ             reduce using rule 23 (expression -> expression - expression .)
    EQ              reduce using rule 23 (expression -> expression - expression .)
    GRTEQ           reduce using rule 23 (expression -> expression - expression .)
    LESEQ           reduce using rule 23 (expression -> expression - expression .)
    >               reduce using rule 23 (expression -> expression - expression .)
    <               reduce using rule 23 (expression -> expression - expression .)
    -               reduce using rule 23 (expression -> expression - expression .)
    +               reduce using rule 23 (expression -> expression - expression .)
    DOTSUB          reduce using rule 23 (expression -> expression - expression .)
    DOTADD          reduce using rule 23 (expression -> expression - expression .)
    ,               reduce using rule 23 (expression -> expression - expression .)
    ;               reduce using rule 23 (expression -> expression - expression .)
    )               reduce using rule 23 (expression -> expression - expression .)
    ]               reduce using rule 23 (expression -> expression - expression .)
    :               reduce using rule 23 (expression -> expression - expression .)
    RETURN          reduce using rule 23 (expression -> expression - expression .)
    CONTINUE        reduce using rule 23 (expression -> expression - expression .)
    BREAK           reduce using rule 23 (expression -> expression - expression .)
    PRINT           reduce using rule 23 (expression -> expression - expression .)
    {               reduce using rule 23 (expression -> expression - expression .)
    FOR             reduce using rule 23 (expression -> expression - expression .)
    WHILE           reduce using rule 23 (expression -> expression - expression .)
    IF              reduce using rule 23 (expression -> expression - expression .)
    ID              reduce using rule 23 (expression -> expression - expression .)
    (               reduce using rule 23 (expression -> expression - expression .)
    STRING          reduce using rule 23 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 23 (expression -> expression - expression .)
    INTNUM          reduce using rule 23 (expression -> expression - expression .)
    EYE             reduce using rule 23 (expression -> expression - expression .)
    ONES            reduce using rule 23 (expression -> expression - expression .)
    ZEROS           reduce using rule 23 (expression -> expression - expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    '               shift and go to state 61


state 90

    (24) expression -> expression + expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 24 (expression -> expression + expression .)
    NEQ             reduce using rule 24 (expression -> expression + expression .)
    EQ              reduce using rule 24 (expression -> expression + expression .)
    GRTEQ           reduce using rule 24 (expression -> expression + expression .)
    LESEQ           reduce using rule 24 (expression -> expression + expression .)
    >               reduce using rule 24 (expression -> expression + expression .)
    <               reduce using rule 24 (expression -> expression + expression .)
    -               reduce using rule 24 (expression -> expression + expression .)
    +               reduce using rule 24 (expression -> expression + expression .)
    DOTSUB          reduce using rule 24 (expression -> expression + expression .)
    DOTADD          reduce using rule 24 (expression -> expression + expression .)
    ,               reduce using rule 24 (expression -> expression + expression .)
    ;               reduce using rule 24 (expression -> expression + expression .)
    )               reduce using rule 24 (expression -> expression + expression .)
    ]               reduce using rule 24 (expression -> expression + expression .)
    :               reduce using rule 24 (expression -> expression + expression .)
    RETURN          reduce using rule 24 (expression -> expression + expression .)
    CONTINUE        reduce using rule 24 (expression -> expression + expression .)
    BREAK           reduce using rule 24 (expression -> expression + expression .)
    PRINT           reduce using rule 24 (expression -> expression + expression .)
    {               reduce using rule 24 (expression -> expression + expression .)
    FOR             reduce using rule 24 (expression -> expression + expression .)
    WHILE           reduce using rule 24 (expression -> expression + expression .)
    IF              reduce using rule 24 (expression -> expression + expression .)
    ID              reduce using rule 24 (expression -> expression + expression .)
    (               reduce using rule 24 (expression -> expression + expression .)
    STRING          reduce using rule 24 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression + expression .)
    INTNUM          reduce using rule 24 (expression -> expression + expression .)
    EYE             reduce using rule 24 (expression -> expression + expression .)
    ONES            reduce using rule 24 (expression -> expression + expression .)
    ZEROS           reduce using rule 24 (expression -> expression + expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    '               shift and go to state 61


state 91

    (25) expression -> expression DOTDIV expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 25 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 25 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 25 (expression -> expression DOTDIV expression .)
    GRTEQ           reduce using rule 25 (expression -> expression DOTDIV expression .)
    LESEQ           reduce using rule 25 (expression -> expression DOTDIV expression .)
    >               reduce using rule 25 (expression -> expression DOTDIV expression .)
    <               reduce using rule 25 (expression -> expression DOTDIV expression .)
    /               reduce using rule 25 (expression -> expression DOTDIV expression .)
    *               reduce using rule 25 (expression -> expression DOTDIV expression .)
    -               reduce using rule 25 (expression -> expression DOTDIV expression .)
    +               reduce using rule 25 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 25 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 25 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 25 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 25 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 25 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 25 (expression -> expression DOTDIV expression .)
    )               reduce using rule 25 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 25 (expression -> expression DOTDIV expression .)
    :               reduce using rule 25 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 25 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 25 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 25 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 25 (expression -> expression DOTDIV expression .)
    {               reduce using rule 25 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 25 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 25 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 25 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 25 (expression -> expression DOTDIV expression .)
    (               reduce using rule 25 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 25 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 25 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 25 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 25 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 25 (expression -> expression DOTDIV expression .)
    '               shift and go to state 61


state 92

    (26) expression -> expression DOTMUL expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 26 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 26 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 26 (expression -> expression DOTMUL expression .)
    GRTEQ           reduce using rule 26 (expression -> expression DOTMUL expression .)
    LESEQ           reduce using rule 26 (expression -> expression DOTMUL expression .)
    >               reduce using rule 26 (expression -> expression DOTMUL expression .)
    <               reduce using rule 26 (expression -> expression DOTMUL expression .)
    /               reduce using rule 26 (expression -> expression DOTMUL expression .)
    *               reduce using rule 26 (expression -> expression DOTMUL expression .)
    -               reduce using rule 26 (expression -> expression DOTMUL expression .)
    +               reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 26 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 26 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 26 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 26 (expression -> expression DOTMUL expression .)
    )               reduce using rule 26 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 26 (expression -> expression DOTMUL expression .)
    :               reduce using rule 26 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 26 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 26 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 26 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 26 (expression -> expression DOTMUL expression .)
    {               reduce using rule 26 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 26 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 26 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 26 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 26 (expression -> expression DOTMUL expression .)
    (               reduce using rule 26 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 26 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 26 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 26 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 26 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 26 (expression -> expression DOTMUL expression .)
    '               shift and go to state 61


state 93

    (27) expression -> expression DOTSUB expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 27 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 27 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 27 (expression -> expression DOTSUB expression .)
    GRTEQ           reduce using rule 27 (expression -> expression DOTSUB expression .)
    LESEQ           reduce using rule 27 (expression -> expression DOTSUB expression .)
    >               reduce using rule 27 (expression -> expression DOTSUB expression .)
    <               reduce using rule 27 (expression -> expression DOTSUB expression .)
    -               reduce using rule 27 (expression -> expression DOTSUB expression .)
    +               reduce using rule 27 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 27 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 27 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 27 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 27 (expression -> expression DOTSUB expression .)
    )               reduce using rule 27 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 27 (expression -> expression DOTSUB expression .)
    :               reduce using rule 27 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 27 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 27 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 27 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 27 (expression -> expression DOTSUB expression .)
    {               reduce using rule 27 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 27 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 27 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 27 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 27 (expression -> expression DOTSUB expression .)
    (               reduce using rule 27 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 27 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 27 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 27 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 27 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 27 (expression -> expression DOTSUB expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    '               shift and go to state 61


state 94

    (28) expression -> expression DOTADD expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    [               reduce using rule 28 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 28 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 28 (expression -> expression DOTADD expression .)
    GRTEQ           reduce using rule 28 (expression -> expression DOTADD expression .)
    LESEQ           reduce using rule 28 (expression -> expression DOTADD expression .)
    >               reduce using rule 28 (expression -> expression DOTADD expression .)
    <               reduce using rule 28 (expression -> expression DOTADD expression .)
    -               reduce using rule 28 (expression -> expression DOTADD expression .)
    +               reduce using rule 28 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 28 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 28 (expression -> expression DOTADD expression .)
    ,               reduce using rule 28 (expression -> expression DOTADD expression .)
    ;               reduce using rule 28 (expression -> expression DOTADD expression .)
    )               reduce using rule 28 (expression -> expression DOTADD expression .)
    ]               reduce using rule 28 (expression -> expression DOTADD expression .)
    :               reduce using rule 28 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 28 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 28 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 28 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 28 (expression -> expression DOTADD expression .)
    {               reduce using rule 28 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 28 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 28 (expression -> expression DOTADD expression .)
    IF              reduce using rule 28 (expression -> expression DOTADD expression .)
    ID              reduce using rule 28 (expression -> expression DOTADD expression .)
    (               reduce using rule 28 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 28 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 28 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 28 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 28 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 28 (expression -> expression DOTADD expression .)
    /               shift and go to state 53
    *               shift and go to state 54
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    '               shift and go to state 61


state 95

    (48) conditional -> IF ( expression . ) instruction
    (49) conditional -> IF ( expression . ) instruction ELSE instruction
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    )               shift and go to state 105
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 96

    (18) expression -> [ list ] .
    [               reduce using rule 18 (expression -> [ list ] .)
    NEQ             reduce using rule 18 (expression -> [ list ] .)
    EQ              reduce using rule 18 (expression -> [ list ] .)
    GRTEQ           reduce using rule 18 (expression -> [ list ] .)
    LESEQ           reduce using rule 18 (expression -> [ list ] .)
    >               reduce using rule 18 (expression -> [ list ] .)
    <               reduce using rule 18 (expression -> [ list ] .)
    /               reduce using rule 18 (expression -> [ list ] .)
    *               reduce using rule 18 (expression -> [ list ] .)
    -               reduce using rule 18 (expression -> [ list ] .)
    +               reduce using rule 18 (expression -> [ list ] .)
    DOTDIV          reduce using rule 18 (expression -> [ list ] .)
    DOTMUL          reduce using rule 18 (expression -> [ list ] .)
    DOTSUB          reduce using rule 18 (expression -> [ list ] .)
    DOTADD          reduce using rule 18 (expression -> [ list ] .)
    '               reduce using rule 18 (expression -> [ list ] .)
    ,               reduce using rule 18 (expression -> [ list ] .)
    ;               reduce using rule 18 (expression -> [ list ] .)
    )               reduce using rule 18 (expression -> [ list ] .)
    ]               reduce using rule 18 (expression -> [ list ] .)
    :               reduce using rule 18 (expression -> [ list ] .)
    RETURN          reduce using rule 18 (expression -> [ list ] .)
    CONTINUE        reduce using rule 18 (expression -> [ list ] .)
    BREAK           reduce using rule 18 (expression -> [ list ] .)
    PRINT           reduce using rule 18 (expression -> [ list ] .)
    {               reduce using rule 18 (expression -> [ list ] .)
    FOR             reduce using rule 18 (expression -> [ list ] .)
    WHILE           reduce using rule 18 (expression -> [ list ] .)
    IF              reduce using rule 18 (expression -> [ list ] .)
    ID              reduce using rule 18 (expression -> [ list ] .)
    (               reduce using rule 18 (expression -> [ list ] .)
    STRING          reduce using rule 18 (expression -> [ list ] .)
    FLOATNUM        reduce using rule 18 (expression -> [ list ] .)
    INTNUM          reduce using rule 18 (expression -> [ list ] .)
    EYE             reduce using rule 18 (expression -> [ list ] .)
    ONES            reduce using rule 18 (expression -> [ list ] .)
    ZEROS           reduce using rule 18 (expression -> [ list ] .)


state 97

    (45) matrix_function -> EYE ( list . )
    )               shift and go to state 106


state 98

    (46) matrix_function -> ONES ( list . )
    )               shift and go to state 107


state 99

    (47) matrix_function -> ZEROS ( list . )
    )               shift and go to state 108


state 100

    (44) list -> expression , list .
    ;               reduce using rule 44 (list -> expression , list .)
    ]               reduce using rule 44 (list -> expression , list .)
    )               reduce using rule 44 (list -> expression , list .)


state 101

    (50) loop -> FOR variable = range . instruction
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    variable                       shift and go to state 13
    instruction                    shift and go to state 109
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    expression                     shift and go to state 16
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 102

    (52) range -> expression . : expression
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    :               shift and go to state 110
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 103

    (51) loop -> WHILE ( expression ) . instruction
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    expression                     shift and go to state 16
    instruction                    shift and go to state 111
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 104

    (42) reference -> expression [ expression , . expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 112
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 105

    (48) conditional -> IF ( expression ) . instruction
    (49) conditional -> IF ( expression ) . instruction ELSE instruction
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    expression                     shift and go to state 16
    instruction                    shift and go to state 113
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 106

    (45) matrix_function -> EYE ( list ) .
    [               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    NEQ             reduce using rule 45 (matrix_function -> EYE ( list ) .)
    EQ              reduce using rule 45 (matrix_function -> EYE ( list ) .)
    GRTEQ           reduce using rule 45 (matrix_function -> EYE ( list ) .)
    LESEQ           reduce using rule 45 (matrix_function -> EYE ( list ) .)
    >               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    <               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    /               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    *               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    -               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    +               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    DOTDIV          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    DOTMUL          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    DOTSUB          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    DOTADD          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    '               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ,               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ;               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    )               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ]               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    :               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    RETURN          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    CONTINUE        reduce using rule 45 (matrix_function -> EYE ( list ) .)
    BREAK           reduce using rule 45 (matrix_function -> EYE ( list ) .)
    PRINT           reduce using rule 45 (matrix_function -> EYE ( list ) .)
    {               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    FOR             reduce using rule 45 (matrix_function -> EYE ( list ) .)
    WHILE           reduce using rule 45 (matrix_function -> EYE ( list ) .)
    IF              reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ID              reduce using rule 45 (matrix_function -> EYE ( list ) .)
    (               reduce using rule 45 (matrix_function -> EYE ( list ) .)
    STRING          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    FLOATNUM        reduce using rule 45 (matrix_function -> EYE ( list ) .)
    INTNUM          reduce using rule 45 (matrix_function -> EYE ( list ) .)
    EYE             reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ONES            reduce using rule 45 (matrix_function -> EYE ( list ) .)
    ZEROS           reduce using rule 45 (matrix_function -> EYE ( list ) .)


state 107

    (46) matrix_function -> ONES ( list ) .
    [               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    NEQ             reduce using rule 46 (matrix_function -> ONES ( list ) .)
    EQ              reduce using rule 46 (matrix_function -> ONES ( list ) .)
    GRTEQ           reduce using rule 46 (matrix_function -> ONES ( list ) .)
    LESEQ           reduce using rule 46 (matrix_function -> ONES ( list ) .)
    >               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    <               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    /               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    *               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    -               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    +               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    DOTDIV          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    DOTMUL          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    DOTSUB          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    DOTADD          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    '               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ,               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ;               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    )               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ]               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    :               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    RETURN          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    CONTINUE        reduce using rule 46 (matrix_function -> ONES ( list ) .)
    BREAK           reduce using rule 46 (matrix_function -> ONES ( list ) .)
    PRINT           reduce using rule 46 (matrix_function -> ONES ( list ) .)
    {               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    FOR             reduce using rule 46 (matrix_function -> ONES ( list ) .)
    WHILE           reduce using rule 46 (matrix_function -> ONES ( list ) .)
    IF              reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ID              reduce using rule 46 (matrix_function -> ONES ( list ) .)
    (               reduce using rule 46 (matrix_function -> ONES ( list ) .)
    STRING          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    FLOATNUM        reduce using rule 46 (matrix_function -> ONES ( list ) .)
    INTNUM          reduce using rule 46 (matrix_function -> ONES ( list ) .)
    EYE             reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ONES            reduce using rule 46 (matrix_function -> ONES ( list ) .)
    ZEROS           reduce using rule 46 (matrix_function -> ONES ( list ) .)


state 108

    (47) matrix_function -> ZEROS ( list ) .
    [               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    NEQ             reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    EQ              reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    GRTEQ           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    LESEQ           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    >               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    <               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    /               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    *               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    -               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    +               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    DOTDIV          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    DOTMUL          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    DOTSUB          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    DOTADD          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    '               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ,               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ;               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    )               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ]               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    :               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    RETURN          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    CONTINUE        reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    BREAK           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    PRINT           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    {               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    FOR             reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    WHILE           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    IF              reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ID              reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    (               reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    STRING          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    FLOATNUM        reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    INTNUM          reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    EYE             reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ONES            reduce using rule 47 (matrix_function -> ZEROS ( list ) .)
    ZEROS           reduce using rule 47 (matrix_function -> ZEROS ( list ) .)


state 109

    (50) loop -> FOR variable = range instruction .
    RETURN          reduce using rule 50 (loop -> FOR variable = range instruction .)
    CONTINUE        reduce using rule 50 (loop -> FOR variable = range instruction .)
    BREAK           reduce using rule 50 (loop -> FOR variable = range instruction .)
    PRINT           reduce using rule 50 (loop -> FOR variable = range instruction .)
    {               reduce using rule 50 (loop -> FOR variable = range instruction .)
    FOR             reduce using rule 50 (loop -> FOR variable = range instruction .)
    WHILE           reduce using rule 50 (loop -> FOR variable = range instruction .)
    IF              reduce using rule 50 (loop -> FOR variable = range instruction .)
    ID              reduce using rule 50 (loop -> FOR variable = range instruction .)
    [               reduce using rule 50 (loop -> FOR variable = range instruction .)
    (               reduce using rule 50 (loop -> FOR variable = range instruction .)
    STRING          reduce using rule 50 (loop -> FOR variable = range instruction .)
    FLOATNUM        reduce using rule 50 (loop -> FOR variable = range instruction .)
    INTNUM          reduce using rule 50 (loop -> FOR variable = range instruction .)
    -               reduce using rule 50 (loop -> FOR variable = range instruction .)
    EYE             reduce using rule 50 (loop -> FOR variable = range instruction .)
    ONES            reduce using rule 50 (loop -> FOR variable = range instruction .)
    ZEROS           reduce using rule 50 (loop -> FOR variable = range instruction .)
    $end            reduce using rule 50 (loop -> FOR variable = range instruction .)
    }               reduce using rule 50 (loop -> FOR variable = range instruction .)
    ELSE            reduce using rule 50 (loop -> FOR variable = range instruction .)


state 110

    (52) range -> expression : . expression
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28
    ID              shift and go to state 19

    expression                     shift and go to state 114
    matrix_function                shift and go to state 21
    variable                       shift and go to state 32
    reference                      shift and go to state 18

state 111

    (51) loop -> WHILE ( expression ) instruction .
    RETURN          reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    {               reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    [               reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    (               reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    FLOATNUM        reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    -               reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    ZEROS           reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 51 (loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 51 (loop -> WHILE ( expression ) instruction .)


state 112

    (42) reference -> expression [ expression , expression . ]
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    ]               shift and go to state 115
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    -               shift and go to state 55
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61
    [               shift and go to state 46


state 113

    (48) conditional -> IF ( expression ) instruction .
    (49) conditional -> IF ( expression ) instruction . ELSE instruction
    RETURN          reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    BREAK           reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    PRINT           reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    {               reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    FOR             reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    WHILE           reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    IF              reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    ID              reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    [               reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    (               reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    STRING          reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    FLOATNUM        reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    INTNUM          reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    -               reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    EYE             reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    ONES            reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    ZEROS           reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    $end            reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    }               reduce using rule 48 (conditional -> IF ( expression ) instruction .)
    ELSE            shift and go to state 116


state 114

    (52) range -> expression : expression .
    (12) expression -> expression . NEQ expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . GRTEQ expression
    (15) expression -> expression . LESEQ expression
    (16) expression -> expression . > expression
    (17) expression -> expression . < expression
    (21) expression -> expression . / expression
    (22) expression -> expression . * expression
    (23) expression -> expression . - expression
    (24) expression -> expression . + expression
    (25) expression -> expression . DOTDIV expression
    (26) expression -> expression . DOTMUL expression
    (27) expression -> expression . DOTSUB expression
    (28) expression -> expression . DOTADD expression
    (33) expression -> expression . '
    (42) reference -> expression . [ expression , expression ]
    RETURN          reduce using rule 52 (range -> expression : expression .)
    CONTINUE        reduce using rule 52 (range -> expression : expression .)
    BREAK           reduce using rule 52 (range -> expression : expression .)
    PRINT           reduce using rule 52 (range -> expression : expression .)
    {               reduce using rule 52 (range -> expression : expression .)
    FOR             reduce using rule 52 (range -> expression : expression .)
    WHILE           reduce using rule 52 (range -> expression : expression .)
    IF              reduce using rule 52 (range -> expression : expression .)
    ID              reduce using rule 52 (range -> expression : expression .)
    [               reduce using rule 52 (range -> expression : expression .)
    (               reduce using rule 52 (range -> expression : expression .)
    STRING          reduce using rule 52 (range -> expression : expression .)
    FLOATNUM        reduce using rule 52 (range -> expression : expression .)
    INTNUM          reduce using rule 52 (range -> expression : expression .)
    -               reduce using rule 52 (range -> expression : expression .)
    EYE             reduce using rule 52 (range -> expression : expression .)
    ONES            reduce using rule 52 (range -> expression : expression .)
    ZEROS           reduce using rule 52 (range -> expression : expression .)
    NEQ             shift and go to state 47
    EQ              shift and go to state 48
    GRTEQ           shift and go to state 49
    LESEQ           shift and go to state 50
    >               shift and go to state 51
    <               shift and go to state 52
    /               shift and go to state 53
    *               shift and go to state 54
    +               shift and go to state 56
    DOTDIV          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTSUB          shift and go to state 59
    DOTADD          shift and go to state 60
    '               shift and go to state 61


state 115

    (42) reference -> expression [ expression , expression ] .
    DIVASSIGN       reduce using rule 42 (reference -> expression [ expression , expression ] .)
    MULASSIGN       reduce using rule 42 (reference -> expression [ expression , expression ] .)
    SUBASSIGN       reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ADDASSIGN       reduce using rule 42 (reference -> expression [ expression , expression ] .)
    =               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    [               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    NEQ             reduce using rule 42 (reference -> expression [ expression , expression ] .)
    EQ              reduce using rule 42 (reference -> expression [ expression , expression ] .)
    GRTEQ           reduce using rule 42 (reference -> expression [ expression , expression ] .)
    LESEQ           reduce using rule 42 (reference -> expression [ expression , expression ] .)
    >               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    <               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    /               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    *               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    -               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    +               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    DOTDIV          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    DOTMUL          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    DOTSUB          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    DOTADD          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    '               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ,               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ;               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    )               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ]               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    :               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    RETURN          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    CONTINUE        reduce using rule 42 (reference -> expression [ expression , expression ] .)
    BREAK           reduce using rule 42 (reference -> expression [ expression , expression ] .)
    PRINT           reduce using rule 42 (reference -> expression [ expression , expression ] .)
    {               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    FOR             reduce using rule 42 (reference -> expression [ expression , expression ] .)
    WHILE           reduce using rule 42 (reference -> expression [ expression , expression ] .)
    IF              reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ID              reduce using rule 42 (reference -> expression [ expression , expression ] .)
    (               reduce using rule 42 (reference -> expression [ expression , expression ] .)
    STRING          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    FLOATNUM        reduce using rule 42 (reference -> expression [ expression , expression ] .)
    INTNUM          reduce using rule 42 (reference -> expression [ expression , expression ] .)
    EYE             reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ONES            reduce using rule 42 (reference -> expression [ expression , expression ] .)
    ZEROS           reduce using rule 42 (reference -> expression [ expression , expression ] .)


state 116

    (49) conditional -> IF ( expression ) instruction ELSE . instruction
    (4) instruction -> . RETURN list ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . BREAK ;
    (7) instruction -> . PRINT list ;
    (8) instruction -> . loop
    (9) instruction -> . conditional
    (10) instruction -> . assignment ;
    (11) instruction -> . { instructions }
    (50) loop -> . FOR variable = range instruction
    (51) loop -> . WHILE ( expression ) instruction
    (48) conditional -> . IF ( expression ) instruction
    (49) conditional -> . IF ( expression ) instruction ELSE instruction
    (37) assignment -> . variable DIVASSIGN expression
    (38) assignment -> . variable MULASSIGN expression
    (39) assignment -> . variable SUBASSIGN expression
    (40) assignment -> . variable ADDASSIGN expression
    (41) assignment -> . variable = expression
    (35) variable -> . reference
    (36) variable -> . ID
    (42) reference -> . expression [ expression , expression ]
    (12) expression -> . expression NEQ expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression GRTEQ expression
    (15) expression -> . expression LESEQ expression
    (16) expression -> . expression > expression
    (17) expression -> . expression < expression
    (18) expression -> . [ list ]
    (19) expression -> . ( expression )
    (20) expression -> . matrix_function
    (21) expression -> . expression / expression
    (22) expression -> . expression * expression
    (23) expression -> . expression - expression
    (24) expression -> . expression + expression
    (25) expression -> . expression DOTDIV expression
    (26) expression -> . expression DOTMUL expression
    (27) expression -> . expression DOTSUB expression
    (28) expression -> . expression DOTADD expression
    (29) expression -> . variable
    (30) expression -> . STRING
    (31) expression -> . FLOATNUM
    (32) expression -> . INTNUM
    (33) expression -> . expression '
    (34) expression -> . - expression
    (45) matrix_function -> . EYE ( list )
    (46) matrix_function -> . ONES ( list )
    (47) matrix_function -> . ZEROS ( list )
    RETURN          shift and go to state 4
    CONTINUE        shift and go to state 5
    BREAK           shift and go to state 6
    PRINT           shift and go to state 7
    {               shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 17
    ID              shift and go to state 19
    [               shift and go to state 20
    (               shift and go to state 15
    STRING          shift and go to state 23
    FLOATNUM        shift and go to state 24
    INTNUM          shift and go to state 25
    -               shift and go to state 22
    EYE             shift and go to state 26
    ONES            shift and go to state 27
    ZEROS           shift and go to state 28

    expression                     shift and go to state 16
    instruction                    shift and go to state 117
    loop                           shift and go to state 8
    conditional                    shift and go to state 9
    assignment                     shift and go to state 10
    variable                       shift and go to state 13
    reference                      shift and go to state 18
    matrix_function                shift and go to state 21

state 117

    (49) conditional -> IF ( expression ) instruction ELSE instruction .
    RETURN          reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    {               reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    [               reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    (               reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    STRING          reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    FLOATNUM        reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    INTNUM          reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    -               reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    EYE             reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    ONES            reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    ZEROS           reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 49 (conditional -> IF ( expression ) instruction ELSE instruction .)

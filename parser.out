Grammar:

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> <empty>
Rule 3     instructions_opt -> instructions
Rule 4     instructions -> { instructions }
Rule 5     instructions -> instruction
Rule 6     instructions -> instructions instruction
Rule 7     instruction -> RETURN list ;
Rule 8     instruction -> CONTINUE ;
Rule 9     instruction -> BREAK ;
Rule 10    instruction -> PRINT list ;
Rule 11    instruction -> loop
Rule 12    instruction -> conditional
Rule 13    instruction -> assignment ;
Rule 14    block -> instruction
Rule 15    block -> { instructions }
Rule 16    expression -> expression NEQ expression  [precedence=nonassoc, level=3]
Rule 17    expression -> expression EQ expression  [precedence=nonassoc, level=3]
Rule 18    expression -> expression GRTEQ expression  [precedence=nonassoc, level=3]
Rule 19    expression -> expression LESEQ expression  [precedence=nonassoc, level=3]
Rule 20    expression -> expression > expression  [precedence=nonassoc, level=3]
Rule 21    expression -> expression < expression  [precedence=nonassoc, level=3]
Rule 22    expression -> [ list ]
Rule 23    expression -> ( expression )
Rule 24    expression -> matrix_function
Rule 25    expression -> expression / expression  [precedence=left, level=5]
Rule 26    expression -> expression * expression  [precedence=left, level=5]
Rule 27    expression -> expression - expression  [precedence=left, level=4]
Rule 28    expression -> expression + expression  [precedence=left, level=4]
Rule 29    expression -> expression DOTDIV expression  [precedence=left, level=5]
Rule 30    expression -> expression DOTMUL expression  [precedence=left, level=5]
Rule 31    expression -> expression DOTSUB expression  [precedence=left, level=4]
Rule 32    expression -> expression DOTADD expression  [precedence=left, level=4]
Rule 33    expression -> variable
Rule 34    expression -> STRING
Rule 35    expression -> FLOATNUM
Rule 36    expression -> INTNUM
Rule 37    expression -> expression '  [precedence=right, level=8]
Rule 38    expression -> - expression  [precedence=right, level=7]
Rule 39    variable -> reference
Rule 40    variable -> ID
Rule 41    assignment -> variable DIVASSIGN expression
Rule 42    assignment -> variable MULASSIGN expression
Rule 43    assignment -> variable SUBASSIGN expression
Rule 44    assignment -> variable ADDASSIGN expression
Rule 45    assignment -> variable = expression
Rule 46    reference -> expression [ expression , expression ]
Rule 47    list -> expression
Rule 48    list -> expression , list
Rule 49    matrix_function -> EYE ( list )
Rule 50    matrix_function -> ONES ( list )
Rule 51    matrix_function -> ZEROS ( list )
Rule 52    conditional -> IF ( expression ) block  [precedence=nonassoc, level=1]
Rule 53    conditional -> IF ( expression ) block ELSE block  [precedence=nonassoc, level=2]
Rule 54    loop -> FOR expression = range block
Rule 55    loop -> WHILE ( expression ) block
Rule 56    range -> expression : expression  [precedence=nonassoc, level=6]

Terminals, with rules where they appear:

'                    : 37
(                    : 23 49 50 51 52 53 55
)                    : 23 49 50 51 52 53 55
*                    : 26
+                    : 28
,                    : 46 48
-                    : 27 38
/                    : 25
:                    : 56
;                    : 7 8 9 10 13
<                    : 21
=                    : 45 54
>                    : 20
ADDASSIGN            : 44
BREAK                : 9
CONTINUE             : 8
DIVASSIGN            : 41
DOTADD               : 32
DOTDIV               : 29
DOTMUL               : 30
DOTSUB               : 31
ELSE                 : 53
EQ                   : 17
EYE                  : 49
FLOATNUM             : 35
FOR                  : 54
GRTEQ                : 18
ID                   : 40
IF                   : 52 53
INTNUM               : 36
LESEQ                : 19
MULASSIGN            : 42
NEQ                  : 16
ONES                 : 50
PRINT                : 10
RETURN               : 7
STRING               : 34
SUBASSIGN            : 43
WHILE                : 55
ZEROS                : 51
[                    : 22 46
]                    : 22 46
error                : 
{                    : 4 15
}                    : 4 15

Nonterminals, with rules where they appear:

assignment           : 13
block                : 52 53 53 54 55
conditional          : 12
expression           : 16 16 17 17 18 18 19 19 20 20 21 21 23 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 37 38 41 42 43 44 45 46 46 46 47 48 52 53 54 55 56 56
instruction          : 5 6 14
instructions         : 3 4 6 15
instructions_opt     : 1
list                 : 7 10 22 48 49 50 51
loop                 : 11
matrix_function      : 24
program              : 0
range                : 54
reference            : 39
variable             : 33 41 42 43 44 45


state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> .
    (3) instructions_opt -> . instructions
    (4) instructions -> . { instructions }
    (5) instructions -> . instruction
    (6) instructions -> . instructions instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    $end            reduce using rule 2 (instructions_opt -> .)
    {               shift and go to state 4
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 5
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 1

    (0) S' -> program .


state 2

    (1) program -> instructions_opt .
    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (3) instructions_opt -> instructions .
    (6) instructions -> instructions . instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    $end            reduce using rule 3 (instructions_opt -> instructions .)
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    instruction                    shift and go to state 30
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 4

    (4) instructions -> { . instructions }
    (4) instructions -> . { instructions }
    (5) instructions -> . instruction
    (6) instructions -> . instructions instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 4
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    instructions                   shift and go to state 31
    instruction                    shift and go to state 5
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 5

    (5) instructions -> instruction .
    RETURN          reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    [               reduce using rule 5 (instructions -> instruction .)
    (               reduce using rule 5 (instructions -> instruction .)
    STRING          reduce using rule 5 (instructions -> instruction .)
    FLOATNUM        reduce using rule 5 (instructions -> instruction .)
    INTNUM          reduce using rule 5 (instructions -> instruction .)
    -               reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 6

    (7) instruction -> RETURN . list ;
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 32
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 7

    (8) instruction -> CONTINUE . ;
    ;               shift and go to state 35


state 8

    (9) instruction -> BREAK . ;
    ;               shift and go to state 36


state 9

    (10) instruction -> PRINT . list ;
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 37
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 10

    (11) instruction -> loop .
    RETURN          reduce using rule 11 (instruction -> loop .)
    CONTINUE        reduce using rule 11 (instruction -> loop .)
    BREAK           reduce using rule 11 (instruction -> loop .)
    PRINT           reduce using rule 11 (instruction -> loop .)
    FOR             reduce using rule 11 (instruction -> loop .)
    WHILE           reduce using rule 11 (instruction -> loop .)
    IF              reduce using rule 11 (instruction -> loop .)
    ID              reduce using rule 11 (instruction -> loop .)
    [               reduce using rule 11 (instruction -> loop .)
    (               reduce using rule 11 (instruction -> loop .)
    STRING          reduce using rule 11 (instruction -> loop .)
    FLOATNUM        reduce using rule 11 (instruction -> loop .)
    INTNUM          reduce using rule 11 (instruction -> loop .)
    -               reduce using rule 11 (instruction -> loop .)
    EYE             reduce using rule 11 (instruction -> loop .)
    ONES            reduce using rule 11 (instruction -> loop .)
    ZEROS           reduce using rule 11 (instruction -> loop .)
    $end            reduce using rule 11 (instruction -> loop .)
    }               reduce using rule 11 (instruction -> loop .)
    ELSE            reduce using rule 11 (instruction -> loop .)


state 11

    (12) instruction -> conditional .
    RETURN          reduce using rule 12 (instruction -> conditional .)
    CONTINUE        reduce using rule 12 (instruction -> conditional .)
    BREAK           reduce using rule 12 (instruction -> conditional .)
    PRINT           reduce using rule 12 (instruction -> conditional .)
    FOR             reduce using rule 12 (instruction -> conditional .)
    WHILE           reduce using rule 12 (instruction -> conditional .)
    IF              reduce using rule 12 (instruction -> conditional .)
    ID              reduce using rule 12 (instruction -> conditional .)
    [               reduce using rule 12 (instruction -> conditional .)
    (               reduce using rule 12 (instruction -> conditional .)
    STRING          reduce using rule 12 (instruction -> conditional .)
    FLOATNUM        reduce using rule 12 (instruction -> conditional .)
    INTNUM          reduce using rule 12 (instruction -> conditional .)
    -               reduce using rule 12 (instruction -> conditional .)
    EYE             reduce using rule 12 (instruction -> conditional .)
    ONES            reduce using rule 12 (instruction -> conditional .)
    ZEROS           reduce using rule 12 (instruction -> conditional .)
    $end            reduce using rule 12 (instruction -> conditional .)
    }               reduce using rule 12 (instruction -> conditional .)
    ELSE            reduce using rule 12 (instruction -> conditional .)


state 12

    (13) instruction -> assignment . ;
    ;               shift and go to state 38


state 13

    (54) loop -> FOR . expression = range block
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 39
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 14

    (46) reference -> expression . [ expression , expression ]
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    [               shift and go to state 40
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 15

    (55) loop -> WHILE . ( expression ) block
    (               shift and go to state 56


state 16

    (23) expression -> ( . expression )
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 57
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 17

    (52) conditional -> IF . ( expression ) block
    (53) conditional -> IF . ( expression ) block ELSE block
    (               shift and go to state 58


state 18

    (41) assignment -> variable . DIVASSIGN expression
    (42) assignment -> variable . MULASSIGN expression
    (43) assignment -> variable . SUBASSIGN expression
    (44) assignment -> variable . ADDASSIGN expression
    (45) assignment -> variable . = expression
    (33) expression -> variable .
    DIVASSIGN       shift and go to state 59
    MULASSIGN       shift and go to state 60
    SUBASSIGN       shift and go to state 61
    ADDASSIGN       shift and go to state 62
    =               shift and go to state 63
    [               reduce using rule 33 (expression -> variable .)
    NEQ             reduce using rule 33 (expression -> variable .)
    EQ              reduce using rule 33 (expression -> variable .)
    GRTEQ           reduce using rule 33 (expression -> variable .)
    LESEQ           reduce using rule 33 (expression -> variable .)
    >               reduce using rule 33 (expression -> variable .)
    <               reduce using rule 33 (expression -> variable .)
    /               reduce using rule 33 (expression -> variable .)
    *               reduce using rule 33 (expression -> variable .)
    -               reduce using rule 33 (expression -> variable .)
    +               reduce using rule 33 (expression -> variable .)
    DOTDIV          reduce using rule 33 (expression -> variable .)
    DOTMUL          reduce using rule 33 (expression -> variable .)
    DOTSUB          reduce using rule 33 (expression -> variable .)
    DOTADD          reduce using rule 33 (expression -> variable .)
    '               reduce using rule 33 (expression -> variable .)


state 19

    (39) variable -> reference .
    DIVASSIGN       reduce using rule 39 (variable -> reference .)
    MULASSIGN       reduce using rule 39 (variable -> reference .)
    SUBASSIGN       reduce using rule 39 (variable -> reference .)
    ADDASSIGN       reduce using rule 39 (variable -> reference .)
    =               reduce using rule 39 (variable -> reference .)
    [               reduce using rule 39 (variable -> reference .)
    NEQ             reduce using rule 39 (variable -> reference .)
    EQ              reduce using rule 39 (variable -> reference .)
    GRTEQ           reduce using rule 39 (variable -> reference .)
    LESEQ           reduce using rule 39 (variable -> reference .)
    >               reduce using rule 39 (variable -> reference .)
    <               reduce using rule 39 (variable -> reference .)
    /               reduce using rule 39 (variable -> reference .)
    *               reduce using rule 39 (variable -> reference .)
    -               reduce using rule 39 (variable -> reference .)
    +               reduce using rule 39 (variable -> reference .)
    DOTDIV          reduce using rule 39 (variable -> reference .)
    DOTMUL          reduce using rule 39 (variable -> reference .)
    DOTSUB          reduce using rule 39 (variable -> reference .)
    DOTADD          reduce using rule 39 (variable -> reference .)
    '               reduce using rule 39 (variable -> reference .)
    ,               reduce using rule 39 (variable -> reference .)
    ;               reduce using rule 39 (variable -> reference .)
    )               reduce using rule 39 (variable -> reference .)
    ]               reduce using rule 39 (variable -> reference .)
    :               reduce using rule 39 (variable -> reference .)
    {               reduce using rule 39 (variable -> reference .)
    RETURN          reduce using rule 39 (variable -> reference .)
    CONTINUE        reduce using rule 39 (variable -> reference .)
    BREAK           reduce using rule 39 (variable -> reference .)
    PRINT           reduce using rule 39 (variable -> reference .)
    FOR             reduce using rule 39 (variable -> reference .)
    WHILE           reduce using rule 39 (variable -> reference .)
    IF              reduce using rule 39 (variable -> reference .)
    ID              reduce using rule 39 (variable -> reference .)
    (               reduce using rule 39 (variable -> reference .)
    STRING          reduce using rule 39 (variable -> reference .)
    FLOATNUM        reduce using rule 39 (variable -> reference .)
    INTNUM          reduce using rule 39 (variable -> reference .)
    EYE             reduce using rule 39 (variable -> reference .)
    ONES            reduce using rule 39 (variable -> reference .)
    ZEROS           reduce using rule 39 (variable -> reference .)


state 20

    (40) variable -> ID .
    DIVASSIGN       reduce using rule 40 (variable -> ID .)
    MULASSIGN       reduce using rule 40 (variable -> ID .)
    SUBASSIGN       reduce using rule 40 (variable -> ID .)
    ADDASSIGN       reduce using rule 40 (variable -> ID .)
    =               reduce using rule 40 (variable -> ID .)
    [               reduce using rule 40 (variable -> ID .)
    NEQ             reduce using rule 40 (variable -> ID .)
    EQ              reduce using rule 40 (variable -> ID .)
    GRTEQ           reduce using rule 40 (variable -> ID .)
    LESEQ           reduce using rule 40 (variable -> ID .)
    >               reduce using rule 40 (variable -> ID .)
    <               reduce using rule 40 (variable -> ID .)
    /               reduce using rule 40 (variable -> ID .)
    *               reduce using rule 40 (variable -> ID .)
    -               reduce using rule 40 (variable -> ID .)
    +               reduce using rule 40 (variable -> ID .)
    DOTDIV          reduce using rule 40 (variable -> ID .)
    DOTMUL          reduce using rule 40 (variable -> ID .)
    DOTSUB          reduce using rule 40 (variable -> ID .)
    DOTADD          reduce using rule 40 (variable -> ID .)
    '               reduce using rule 40 (variable -> ID .)
    ,               reduce using rule 40 (variable -> ID .)
    ;               reduce using rule 40 (variable -> ID .)
    )               reduce using rule 40 (variable -> ID .)
    ]               reduce using rule 40 (variable -> ID .)
    :               reduce using rule 40 (variable -> ID .)
    {               reduce using rule 40 (variable -> ID .)
    RETURN          reduce using rule 40 (variable -> ID .)
    CONTINUE        reduce using rule 40 (variable -> ID .)
    BREAK           reduce using rule 40 (variable -> ID .)
    PRINT           reduce using rule 40 (variable -> ID .)
    FOR             reduce using rule 40 (variable -> ID .)
    WHILE           reduce using rule 40 (variable -> ID .)
    IF              reduce using rule 40 (variable -> ID .)
    ID              reduce using rule 40 (variable -> ID .)
    (               reduce using rule 40 (variable -> ID .)
    STRING          reduce using rule 40 (variable -> ID .)
    FLOATNUM        reduce using rule 40 (variable -> ID .)
    INTNUM          reduce using rule 40 (variable -> ID .)
    EYE             reduce using rule 40 (variable -> ID .)
    ONES            reduce using rule 40 (variable -> ID .)
    ZEROS           reduce using rule 40 (variable -> ID .)


state 21

    (22) expression -> [ . list ]
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 64
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 22

    (24) expression -> matrix_function .
    [               reduce using rule 24 (expression -> matrix_function .)
    NEQ             reduce using rule 24 (expression -> matrix_function .)
    EQ              reduce using rule 24 (expression -> matrix_function .)
    GRTEQ           reduce using rule 24 (expression -> matrix_function .)
    LESEQ           reduce using rule 24 (expression -> matrix_function .)
    >               reduce using rule 24 (expression -> matrix_function .)
    <               reduce using rule 24 (expression -> matrix_function .)
    /               reduce using rule 24 (expression -> matrix_function .)
    *               reduce using rule 24 (expression -> matrix_function .)
    -               reduce using rule 24 (expression -> matrix_function .)
    +               reduce using rule 24 (expression -> matrix_function .)
    DOTDIV          reduce using rule 24 (expression -> matrix_function .)
    DOTMUL          reduce using rule 24 (expression -> matrix_function .)
    DOTSUB          reduce using rule 24 (expression -> matrix_function .)
    DOTADD          reduce using rule 24 (expression -> matrix_function .)
    '               reduce using rule 24 (expression -> matrix_function .)
    ,               reduce using rule 24 (expression -> matrix_function .)
    ;               reduce using rule 24 (expression -> matrix_function .)
    =               reduce using rule 24 (expression -> matrix_function .)
    )               reduce using rule 24 (expression -> matrix_function .)
    ]               reduce using rule 24 (expression -> matrix_function .)
    :               reduce using rule 24 (expression -> matrix_function .)
    {               reduce using rule 24 (expression -> matrix_function .)
    RETURN          reduce using rule 24 (expression -> matrix_function .)
    CONTINUE        reduce using rule 24 (expression -> matrix_function .)
    BREAK           reduce using rule 24 (expression -> matrix_function .)
    PRINT           reduce using rule 24 (expression -> matrix_function .)
    FOR             reduce using rule 24 (expression -> matrix_function .)
    WHILE           reduce using rule 24 (expression -> matrix_function .)
    IF              reduce using rule 24 (expression -> matrix_function .)
    ID              reduce using rule 24 (expression -> matrix_function .)
    (               reduce using rule 24 (expression -> matrix_function .)
    STRING          reduce using rule 24 (expression -> matrix_function .)
    FLOATNUM        reduce using rule 24 (expression -> matrix_function .)
    INTNUM          reduce using rule 24 (expression -> matrix_function .)
    EYE             reduce using rule 24 (expression -> matrix_function .)
    ONES            reduce using rule 24 (expression -> matrix_function .)
    ZEROS           reduce using rule 24 (expression -> matrix_function .)


state 23

    (38) expression -> - . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 65
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 24

    (34) expression -> STRING .
    [               reduce using rule 34 (expression -> STRING .)
    NEQ             reduce using rule 34 (expression -> STRING .)
    EQ              reduce using rule 34 (expression -> STRING .)
    GRTEQ           reduce using rule 34 (expression -> STRING .)
    LESEQ           reduce using rule 34 (expression -> STRING .)
    >               reduce using rule 34 (expression -> STRING .)
    <               reduce using rule 34 (expression -> STRING .)
    /               reduce using rule 34 (expression -> STRING .)
    *               reduce using rule 34 (expression -> STRING .)
    -               reduce using rule 34 (expression -> STRING .)
    +               reduce using rule 34 (expression -> STRING .)
    DOTDIV          reduce using rule 34 (expression -> STRING .)
    DOTMUL          reduce using rule 34 (expression -> STRING .)
    DOTSUB          reduce using rule 34 (expression -> STRING .)
    DOTADD          reduce using rule 34 (expression -> STRING .)
    '               reduce using rule 34 (expression -> STRING .)
    ,               reduce using rule 34 (expression -> STRING .)
    ;               reduce using rule 34 (expression -> STRING .)
    =               reduce using rule 34 (expression -> STRING .)
    )               reduce using rule 34 (expression -> STRING .)
    ]               reduce using rule 34 (expression -> STRING .)
    :               reduce using rule 34 (expression -> STRING .)
    {               reduce using rule 34 (expression -> STRING .)
    RETURN          reduce using rule 34 (expression -> STRING .)
    CONTINUE        reduce using rule 34 (expression -> STRING .)
    BREAK           reduce using rule 34 (expression -> STRING .)
    PRINT           reduce using rule 34 (expression -> STRING .)
    FOR             reduce using rule 34 (expression -> STRING .)
    WHILE           reduce using rule 34 (expression -> STRING .)
    IF              reduce using rule 34 (expression -> STRING .)
    ID              reduce using rule 34 (expression -> STRING .)
    (               reduce using rule 34 (expression -> STRING .)
    STRING          reduce using rule 34 (expression -> STRING .)
    FLOATNUM        reduce using rule 34 (expression -> STRING .)
    INTNUM          reduce using rule 34 (expression -> STRING .)
    EYE             reduce using rule 34 (expression -> STRING .)
    ONES            reduce using rule 34 (expression -> STRING .)
    ZEROS           reduce using rule 34 (expression -> STRING .)


state 25

    (35) expression -> FLOATNUM .
    [               reduce using rule 35 (expression -> FLOATNUM .)
    NEQ             reduce using rule 35 (expression -> FLOATNUM .)
    EQ              reduce using rule 35 (expression -> FLOATNUM .)
    GRTEQ           reduce using rule 35 (expression -> FLOATNUM .)
    LESEQ           reduce using rule 35 (expression -> FLOATNUM .)
    >               reduce using rule 35 (expression -> FLOATNUM .)
    <               reduce using rule 35 (expression -> FLOATNUM .)
    /               reduce using rule 35 (expression -> FLOATNUM .)
    *               reduce using rule 35 (expression -> FLOATNUM .)
    -               reduce using rule 35 (expression -> FLOATNUM .)
    +               reduce using rule 35 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 35 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 35 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 35 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 35 (expression -> FLOATNUM .)
    '               reduce using rule 35 (expression -> FLOATNUM .)
    ,               reduce using rule 35 (expression -> FLOATNUM .)
    ;               reduce using rule 35 (expression -> FLOATNUM .)
    =               reduce using rule 35 (expression -> FLOATNUM .)
    )               reduce using rule 35 (expression -> FLOATNUM .)
    ]               reduce using rule 35 (expression -> FLOATNUM .)
    :               reduce using rule 35 (expression -> FLOATNUM .)
    {               reduce using rule 35 (expression -> FLOATNUM .)
    RETURN          reduce using rule 35 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 35 (expression -> FLOATNUM .)
    BREAK           reduce using rule 35 (expression -> FLOATNUM .)
    PRINT           reduce using rule 35 (expression -> FLOATNUM .)
    FOR             reduce using rule 35 (expression -> FLOATNUM .)
    WHILE           reduce using rule 35 (expression -> FLOATNUM .)
    IF              reduce using rule 35 (expression -> FLOATNUM .)
    ID              reduce using rule 35 (expression -> FLOATNUM .)
    (               reduce using rule 35 (expression -> FLOATNUM .)
    STRING          reduce using rule 35 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 35 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 35 (expression -> FLOATNUM .)
    EYE             reduce using rule 35 (expression -> FLOATNUM .)
    ONES            reduce using rule 35 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 35 (expression -> FLOATNUM .)


state 26

    (36) expression -> INTNUM .
    [               reduce using rule 36 (expression -> INTNUM .)
    NEQ             reduce using rule 36 (expression -> INTNUM .)
    EQ              reduce using rule 36 (expression -> INTNUM .)
    GRTEQ           reduce using rule 36 (expression -> INTNUM .)
    LESEQ           reduce using rule 36 (expression -> INTNUM .)
    >               reduce using rule 36 (expression -> INTNUM .)
    <               reduce using rule 36 (expression -> INTNUM .)
    /               reduce using rule 36 (expression -> INTNUM .)
    *               reduce using rule 36 (expression -> INTNUM .)
    -               reduce using rule 36 (expression -> INTNUM .)
    +               reduce using rule 36 (expression -> INTNUM .)
    DOTDIV          reduce using rule 36 (expression -> INTNUM .)
    DOTMUL          reduce using rule 36 (expression -> INTNUM .)
    DOTSUB          reduce using rule 36 (expression -> INTNUM .)
    DOTADD          reduce using rule 36 (expression -> INTNUM .)
    '               reduce using rule 36 (expression -> INTNUM .)
    ,               reduce using rule 36 (expression -> INTNUM .)
    ;               reduce using rule 36 (expression -> INTNUM .)
    =               reduce using rule 36 (expression -> INTNUM .)
    )               reduce using rule 36 (expression -> INTNUM .)
    ]               reduce using rule 36 (expression -> INTNUM .)
    :               reduce using rule 36 (expression -> INTNUM .)
    {               reduce using rule 36 (expression -> INTNUM .)
    RETURN          reduce using rule 36 (expression -> INTNUM .)
    CONTINUE        reduce using rule 36 (expression -> INTNUM .)
    BREAK           reduce using rule 36 (expression -> INTNUM .)
    PRINT           reduce using rule 36 (expression -> INTNUM .)
    FOR             reduce using rule 36 (expression -> INTNUM .)
    WHILE           reduce using rule 36 (expression -> INTNUM .)
    IF              reduce using rule 36 (expression -> INTNUM .)
    ID              reduce using rule 36 (expression -> INTNUM .)
    (               reduce using rule 36 (expression -> INTNUM .)
    STRING          reduce using rule 36 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 36 (expression -> INTNUM .)
    INTNUM          reduce using rule 36 (expression -> INTNUM .)
    EYE             reduce using rule 36 (expression -> INTNUM .)
    ONES            reduce using rule 36 (expression -> INTNUM .)
    ZEROS           reduce using rule 36 (expression -> INTNUM .)


state 27

    (49) matrix_function -> EYE . ( list )
    (               shift and go to state 66


state 28

    (50) matrix_function -> ONES . ( list )
    (               shift and go to state 67


state 29

    (51) matrix_function -> ZEROS . ( list )
    (               shift and go to state 68


state 30

    (6) instructions -> instructions instruction .
    RETURN          reduce using rule 6 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 6 (instructions -> instructions instruction .)
    BREAK           reduce using rule 6 (instructions -> instructions instruction .)
    PRINT           reduce using rule 6 (instructions -> instructions instruction .)
    FOR             reduce using rule 6 (instructions -> instructions instruction .)
    WHILE           reduce using rule 6 (instructions -> instructions instruction .)
    IF              reduce using rule 6 (instructions -> instructions instruction .)
    ID              reduce using rule 6 (instructions -> instructions instruction .)
    [               reduce using rule 6 (instructions -> instructions instruction .)
    (               reduce using rule 6 (instructions -> instructions instruction .)
    STRING          reduce using rule 6 (instructions -> instructions instruction .)
    FLOATNUM        reduce using rule 6 (instructions -> instructions instruction .)
    INTNUM          reduce using rule 6 (instructions -> instructions instruction .)
    -               reduce using rule 6 (instructions -> instructions instruction .)
    EYE             reduce using rule 6 (instructions -> instructions instruction .)
    ONES            reduce using rule 6 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 6 (instructions -> instructions instruction .)
    $end            reduce using rule 6 (instructions -> instructions instruction .)
    }               reduce using rule 6 (instructions -> instructions instruction .)


state 31

    (4) instructions -> { instructions . }
    (6) instructions -> instructions . instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    }               shift and go to state 69
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    instruction                    shift and go to state 30
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 32

    (7) instruction -> RETURN list . ;
    ;               shift and go to state 70


state 33

    (47) list -> expression .
    (48) list -> expression . , list
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 47 (list -> expression .)
    ]               reduce using rule 47 (list -> expression .)
    )               reduce using rule 47 (list -> expression .)
    ,               shift and go to state 71
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 34

    (33) expression -> variable .
    ,               reduce using rule 33 (expression -> variable .)
    NEQ             reduce using rule 33 (expression -> variable .)
    EQ              reduce using rule 33 (expression -> variable .)
    GRTEQ           reduce using rule 33 (expression -> variable .)
    LESEQ           reduce using rule 33 (expression -> variable .)
    >               reduce using rule 33 (expression -> variable .)
    <               reduce using rule 33 (expression -> variable .)
    /               reduce using rule 33 (expression -> variable .)
    *               reduce using rule 33 (expression -> variable .)
    -               reduce using rule 33 (expression -> variable .)
    +               reduce using rule 33 (expression -> variable .)
    DOTDIV          reduce using rule 33 (expression -> variable .)
    DOTMUL          reduce using rule 33 (expression -> variable .)
    DOTSUB          reduce using rule 33 (expression -> variable .)
    DOTADD          reduce using rule 33 (expression -> variable .)
    '               reduce using rule 33 (expression -> variable .)
    [               reduce using rule 33 (expression -> variable .)
    ;               reduce using rule 33 (expression -> variable .)
    =               reduce using rule 33 (expression -> variable .)
    )               reduce using rule 33 (expression -> variable .)
    ]               reduce using rule 33 (expression -> variable .)
    :               reduce using rule 33 (expression -> variable .)
    {               reduce using rule 33 (expression -> variable .)
    RETURN          reduce using rule 33 (expression -> variable .)
    CONTINUE        reduce using rule 33 (expression -> variable .)
    BREAK           reduce using rule 33 (expression -> variable .)
    PRINT           reduce using rule 33 (expression -> variable .)
    FOR             reduce using rule 33 (expression -> variable .)
    WHILE           reduce using rule 33 (expression -> variable .)
    IF              reduce using rule 33 (expression -> variable .)
    ID              reduce using rule 33 (expression -> variable .)
    (               reduce using rule 33 (expression -> variable .)
    STRING          reduce using rule 33 (expression -> variable .)
    FLOATNUM        reduce using rule 33 (expression -> variable .)
    INTNUM          reduce using rule 33 (expression -> variable .)
    EYE             reduce using rule 33 (expression -> variable .)
    ONES            reduce using rule 33 (expression -> variable .)
    ZEROS           reduce using rule 33 (expression -> variable .)


state 35

    (8) instruction -> CONTINUE ; .
    RETURN          reduce using rule 8 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 8 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 8 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 8 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 8 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 8 (instruction -> CONTINUE ; .)
    IF              reduce using rule 8 (instruction -> CONTINUE ; .)
    ID              reduce using rule 8 (instruction -> CONTINUE ; .)
    [               reduce using rule 8 (instruction -> CONTINUE ; .)
    (               reduce using rule 8 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 8 (instruction -> CONTINUE ; .)
    FLOATNUM        reduce using rule 8 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 8 (instruction -> CONTINUE ; .)
    -               reduce using rule 8 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 8 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 8 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 8 (instruction -> CONTINUE ; .)
    $end            reduce using rule 8 (instruction -> CONTINUE ; .)
    }               reduce using rule 8 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 8 (instruction -> CONTINUE ; .)


state 36

    (9) instruction -> BREAK ; .
    RETURN          reduce using rule 9 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 9 (instruction -> BREAK ; .)
    BREAK           reduce using rule 9 (instruction -> BREAK ; .)
    PRINT           reduce using rule 9 (instruction -> BREAK ; .)
    FOR             reduce using rule 9 (instruction -> BREAK ; .)
    WHILE           reduce using rule 9 (instruction -> BREAK ; .)
    IF              reduce using rule 9 (instruction -> BREAK ; .)
    ID              reduce using rule 9 (instruction -> BREAK ; .)
    [               reduce using rule 9 (instruction -> BREAK ; .)
    (               reduce using rule 9 (instruction -> BREAK ; .)
    STRING          reduce using rule 9 (instruction -> BREAK ; .)
    FLOATNUM        reduce using rule 9 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 9 (instruction -> BREAK ; .)
    -               reduce using rule 9 (instruction -> BREAK ; .)
    EYE             reduce using rule 9 (instruction -> BREAK ; .)
    ONES            reduce using rule 9 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 9 (instruction -> BREAK ; .)
    $end            reduce using rule 9 (instruction -> BREAK ; .)
    }               reduce using rule 9 (instruction -> BREAK ; .)
    ELSE            reduce using rule 9 (instruction -> BREAK ; .)


state 37

    (10) instruction -> PRINT list . ;
    ;               shift and go to state 72


state 38

    (13) instruction -> assignment ; .
    RETURN          reduce using rule 13 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 13 (instruction -> assignment ; .)
    BREAK           reduce using rule 13 (instruction -> assignment ; .)
    PRINT           reduce using rule 13 (instruction -> assignment ; .)
    FOR             reduce using rule 13 (instruction -> assignment ; .)
    WHILE           reduce using rule 13 (instruction -> assignment ; .)
    IF              reduce using rule 13 (instruction -> assignment ; .)
    ID              reduce using rule 13 (instruction -> assignment ; .)
    [               reduce using rule 13 (instruction -> assignment ; .)
    (               reduce using rule 13 (instruction -> assignment ; .)
    STRING          reduce using rule 13 (instruction -> assignment ; .)
    FLOATNUM        reduce using rule 13 (instruction -> assignment ; .)
    INTNUM          reduce using rule 13 (instruction -> assignment ; .)
    -               reduce using rule 13 (instruction -> assignment ; .)
    EYE             reduce using rule 13 (instruction -> assignment ; .)
    ONES            reduce using rule 13 (instruction -> assignment ; .)
    ZEROS           reduce using rule 13 (instruction -> assignment ; .)
    $end            reduce using rule 13 (instruction -> assignment ; .)
    }               reduce using rule 13 (instruction -> assignment ; .)
    ELSE            reduce using rule 13 (instruction -> assignment ; .)


state 39

    (54) loop -> FOR expression . = range block
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    =               shift and go to state 73
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 40

    (46) reference -> expression [ . expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 74
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 41

    (16) expression -> expression NEQ . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 75
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 42

    (17) expression -> expression EQ . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 76
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 43

    (18) expression -> expression GRTEQ . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 77
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 44

    (19) expression -> expression LESEQ . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 78
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 45

    (20) expression -> expression > . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 79
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 46

    (21) expression -> expression < . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 80
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 47

    (25) expression -> expression / . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 81
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 48

    (26) expression -> expression * . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 82
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 49

    (27) expression -> expression - . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 83
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 50

    (28) expression -> expression + . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 84
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 51

    (29) expression -> expression DOTDIV . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 85
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 52

    (30) expression -> expression DOTMUL . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 86
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 53

    (31) expression -> expression DOTSUB . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 87
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 54

    (32) expression -> expression DOTADD . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 88
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 55

    (37) expression -> expression ' .
    [               reduce using rule 37 (expression -> expression ' .)
    NEQ             reduce using rule 37 (expression -> expression ' .)
    EQ              reduce using rule 37 (expression -> expression ' .)
    GRTEQ           reduce using rule 37 (expression -> expression ' .)
    LESEQ           reduce using rule 37 (expression -> expression ' .)
    >               reduce using rule 37 (expression -> expression ' .)
    <               reduce using rule 37 (expression -> expression ' .)
    /               reduce using rule 37 (expression -> expression ' .)
    *               reduce using rule 37 (expression -> expression ' .)
    -               reduce using rule 37 (expression -> expression ' .)
    +               reduce using rule 37 (expression -> expression ' .)
    DOTDIV          reduce using rule 37 (expression -> expression ' .)
    DOTMUL          reduce using rule 37 (expression -> expression ' .)
    DOTSUB          reduce using rule 37 (expression -> expression ' .)
    DOTADD          reduce using rule 37 (expression -> expression ' .)
    '               reduce using rule 37 (expression -> expression ' .)
    ,               reduce using rule 37 (expression -> expression ' .)
    ;               reduce using rule 37 (expression -> expression ' .)
    =               reduce using rule 37 (expression -> expression ' .)
    )               reduce using rule 37 (expression -> expression ' .)
    ]               reduce using rule 37 (expression -> expression ' .)
    :               reduce using rule 37 (expression -> expression ' .)
    {               reduce using rule 37 (expression -> expression ' .)
    RETURN          reduce using rule 37 (expression -> expression ' .)
    CONTINUE        reduce using rule 37 (expression -> expression ' .)
    BREAK           reduce using rule 37 (expression -> expression ' .)
    PRINT           reduce using rule 37 (expression -> expression ' .)
    FOR             reduce using rule 37 (expression -> expression ' .)
    WHILE           reduce using rule 37 (expression -> expression ' .)
    IF              reduce using rule 37 (expression -> expression ' .)
    ID              reduce using rule 37 (expression -> expression ' .)
    (               reduce using rule 37 (expression -> expression ' .)
    STRING          reduce using rule 37 (expression -> expression ' .)
    FLOATNUM        reduce using rule 37 (expression -> expression ' .)
    INTNUM          reduce using rule 37 (expression -> expression ' .)
    EYE             reduce using rule 37 (expression -> expression ' .)
    ONES            reduce using rule 37 (expression -> expression ' .)
    ZEROS           reduce using rule 37 (expression -> expression ' .)


state 56

    (55) loop -> WHILE ( . expression ) block
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 89
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 57

    (23) expression -> ( expression . )
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    )               shift and go to state 90
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 58

    (52) conditional -> IF ( . expression ) block
    (53) conditional -> IF ( . expression ) block ELSE block
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 91
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 59

    (41) assignment -> variable DIVASSIGN . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    variable                       shift and go to state 34
    expression                     shift and go to state 92
    matrix_function                shift and go to state 22
    reference                      shift and go to state 19

state 60

    (42) assignment -> variable MULASSIGN . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    variable                       shift and go to state 34
    expression                     shift and go to state 93
    matrix_function                shift and go to state 22
    reference                      shift and go to state 19

state 61

    (43) assignment -> variable SUBASSIGN . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    variable                       shift and go to state 34
    expression                     shift and go to state 94
    matrix_function                shift and go to state 22
    reference                      shift and go to state 19

state 62

    (44) assignment -> variable ADDASSIGN . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    variable                       shift and go to state 34
    expression                     shift and go to state 95
    matrix_function                shift and go to state 22
    reference                      shift and go to state 19

state 63

    (45) assignment -> variable = . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    variable                       shift and go to state 34
    expression                     shift and go to state 96
    matrix_function                shift and go to state 22
    reference                      shift and go to state 19

state 64

    (22) expression -> [ list . ]
    ]               shift and go to state 97


state 65

    (38) expression -> - expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 38 (expression -> - expression .)
    NEQ             reduce using rule 38 (expression -> - expression .)
    EQ              reduce using rule 38 (expression -> - expression .)
    GRTEQ           reduce using rule 38 (expression -> - expression .)
    LESEQ           reduce using rule 38 (expression -> - expression .)
    >               reduce using rule 38 (expression -> - expression .)
    <               reduce using rule 38 (expression -> - expression .)
    /               reduce using rule 38 (expression -> - expression .)
    *               reduce using rule 38 (expression -> - expression .)
    -               reduce using rule 38 (expression -> - expression .)
    +               reduce using rule 38 (expression -> - expression .)
    DOTDIV          reduce using rule 38 (expression -> - expression .)
    DOTMUL          reduce using rule 38 (expression -> - expression .)
    DOTSUB          reduce using rule 38 (expression -> - expression .)
    DOTADD          reduce using rule 38 (expression -> - expression .)
    ,               reduce using rule 38 (expression -> - expression .)
    ;               reduce using rule 38 (expression -> - expression .)
    =               reduce using rule 38 (expression -> - expression .)
    )               reduce using rule 38 (expression -> - expression .)
    ]               reduce using rule 38 (expression -> - expression .)
    :               reduce using rule 38 (expression -> - expression .)
    {               reduce using rule 38 (expression -> - expression .)
    RETURN          reduce using rule 38 (expression -> - expression .)
    CONTINUE        reduce using rule 38 (expression -> - expression .)
    BREAK           reduce using rule 38 (expression -> - expression .)
    PRINT           reduce using rule 38 (expression -> - expression .)
    FOR             reduce using rule 38 (expression -> - expression .)
    WHILE           reduce using rule 38 (expression -> - expression .)
    IF              reduce using rule 38 (expression -> - expression .)
    ID              reduce using rule 38 (expression -> - expression .)
    (               reduce using rule 38 (expression -> - expression .)
    STRING          reduce using rule 38 (expression -> - expression .)
    FLOATNUM        reduce using rule 38 (expression -> - expression .)
    INTNUM          reduce using rule 38 (expression -> - expression .)
    EYE             reduce using rule 38 (expression -> - expression .)
    ONES            reduce using rule 38 (expression -> - expression .)
    ZEROS           reduce using rule 38 (expression -> - expression .)
    '               shift and go to state 55


state 66

    (49) matrix_function -> EYE ( . list )
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 98
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 67

    (50) matrix_function -> ONES ( . list )
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 99
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 68

    (51) matrix_function -> ZEROS ( . list )
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    list                           shift and go to state 100
    expression                     shift and go to state 33
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 69

    (4) instructions -> { instructions } .
    RETURN          reduce using rule 4 (instructions -> { instructions } .)
    CONTINUE        reduce using rule 4 (instructions -> { instructions } .)
    BREAK           reduce using rule 4 (instructions -> { instructions } .)
    PRINT           reduce using rule 4 (instructions -> { instructions } .)
    FOR             reduce using rule 4 (instructions -> { instructions } .)
    WHILE           reduce using rule 4 (instructions -> { instructions } .)
    IF              reduce using rule 4 (instructions -> { instructions } .)
    ID              reduce using rule 4 (instructions -> { instructions } .)
    [               reduce using rule 4 (instructions -> { instructions } .)
    (               reduce using rule 4 (instructions -> { instructions } .)
    STRING          reduce using rule 4 (instructions -> { instructions } .)
    FLOATNUM        reduce using rule 4 (instructions -> { instructions } .)
    INTNUM          reduce using rule 4 (instructions -> { instructions } .)
    -               reduce using rule 4 (instructions -> { instructions } .)
    EYE             reduce using rule 4 (instructions -> { instructions } .)
    ONES            reduce using rule 4 (instructions -> { instructions } .)
    ZEROS           reduce using rule 4 (instructions -> { instructions } .)
    $end            reduce using rule 4 (instructions -> { instructions } .)
    }               reduce using rule 4 (instructions -> { instructions } .)


state 70

    (7) instruction -> RETURN list ; .
    RETURN          reduce using rule 7 (instruction -> RETURN list ; .)
    CONTINUE        reduce using rule 7 (instruction -> RETURN list ; .)
    BREAK           reduce using rule 7 (instruction -> RETURN list ; .)
    PRINT           reduce using rule 7 (instruction -> RETURN list ; .)
    FOR             reduce using rule 7 (instruction -> RETURN list ; .)
    WHILE           reduce using rule 7 (instruction -> RETURN list ; .)
    IF              reduce using rule 7 (instruction -> RETURN list ; .)
    ID              reduce using rule 7 (instruction -> RETURN list ; .)
    [               reduce using rule 7 (instruction -> RETURN list ; .)
    (               reduce using rule 7 (instruction -> RETURN list ; .)
    STRING          reduce using rule 7 (instruction -> RETURN list ; .)
    FLOATNUM        reduce using rule 7 (instruction -> RETURN list ; .)
    INTNUM          reduce using rule 7 (instruction -> RETURN list ; .)
    -               reduce using rule 7 (instruction -> RETURN list ; .)
    EYE             reduce using rule 7 (instruction -> RETURN list ; .)
    ONES            reduce using rule 7 (instruction -> RETURN list ; .)
    ZEROS           reduce using rule 7 (instruction -> RETURN list ; .)
    $end            reduce using rule 7 (instruction -> RETURN list ; .)
    }               reduce using rule 7 (instruction -> RETURN list ; .)
    ELSE            reduce using rule 7 (instruction -> RETURN list ; .)


state 71

    (48) list -> expression , . list
    (47) list -> . expression
    (48) list -> . expression , list
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 33
    list                           shift and go to state 101
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 72

    (10) instruction -> PRINT list ; .
    RETURN          reduce using rule 10 (instruction -> PRINT list ; .)
    CONTINUE        reduce using rule 10 (instruction -> PRINT list ; .)
    BREAK           reduce using rule 10 (instruction -> PRINT list ; .)
    PRINT           reduce using rule 10 (instruction -> PRINT list ; .)
    FOR             reduce using rule 10 (instruction -> PRINT list ; .)
    WHILE           reduce using rule 10 (instruction -> PRINT list ; .)
    IF              reduce using rule 10 (instruction -> PRINT list ; .)
    ID              reduce using rule 10 (instruction -> PRINT list ; .)
    [               reduce using rule 10 (instruction -> PRINT list ; .)
    (               reduce using rule 10 (instruction -> PRINT list ; .)
    STRING          reduce using rule 10 (instruction -> PRINT list ; .)
    FLOATNUM        reduce using rule 10 (instruction -> PRINT list ; .)
    INTNUM          reduce using rule 10 (instruction -> PRINT list ; .)
    -               reduce using rule 10 (instruction -> PRINT list ; .)
    EYE             reduce using rule 10 (instruction -> PRINT list ; .)
    ONES            reduce using rule 10 (instruction -> PRINT list ; .)
    ZEROS           reduce using rule 10 (instruction -> PRINT list ; .)
    $end            reduce using rule 10 (instruction -> PRINT list ; .)
    }               reduce using rule 10 (instruction -> PRINT list ; .)
    ELSE            reduce using rule 10 (instruction -> PRINT list ; .)


state 73

    (54) loop -> FOR expression = . range block
    (56) range -> . expression : expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 102
    range                          shift and go to state 103
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 74

    (46) reference -> expression [ expression . , expression ]
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ,               shift and go to state 104
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 75

    (16) expression -> expression NEQ expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 16 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 16 (expression -> expression NEQ expression .)
    EQ              reduce using rule 16 (expression -> expression NEQ expression .)
    GRTEQ           reduce using rule 16 (expression -> expression NEQ expression .)
    LESEQ           reduce using rule 16 (expression -> expression NEQ expression .)
    >               reduce using rule 16 (expression -> expression NEQ expression .)
    <               reduce using rule 16 (expression -> expression NEQ expression .)
    ,               reduce using rule 16 (expression -> expression NEQ expression .)
    ;               reduce using rule 16 (expression -> expression NEQ expression .)
    =               reduce using rule 16 (expression -> expression NEQ expression .)
    )               reduce using rule 16 (expression -> expression NEQ expression .)
    ]               reduce using rule 16 (expression -> expression NEQ expression .)
    :               reduce using rule 16 (expression -> expression NEQ expression .)
    {               reduce using rule 16 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 16 (expression -> expression NEQ expression .)
    CONTINUE        reduce using rule 16 (expression -> expression NEQ expression .)
    BREAK           reduce using rule 16 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 16 (expression -> expression NEQ expression .)
    FOR             reduce using rule 16 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 16 (expression -> expression NEQ expression .)
    IF              reduce using rule 16 (expression -> expression NEQ expression .)
    ID              reduce using rule 16 (expression -> expression NEQ expression .)
    (               reduce using rule 16 (expression -> expression NEQ expression .)
    STRING          reduce using rule 16 (expression -> expression NEQ expression .)
    FLOATNUM        reduce using rule 16 (expression -> expression NEQ expression .)
    INTNUM          reduce using rule 16 (expression -> expression NEQ expression .)
    EYE             reduce using rule 16 (expression -> expression NEQ expression .)
    ONES            reduce using rule 16 (expression -> expression NEQ expression .)
    ZEROS           reduce using rule 16 (expression -> expression NEQ expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 76

    (17) expression -> expression EQ expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 17 (expression -> expression EQ expression .)
    NEQ             reduce using rule 17 (expression -> expression EQ expression .)
    EQ              reduce using rule 17 (expression -> expression EQ expression .)
    GRTEQ           reduce using rule 17 (expression -> expression EQ expression .)
    LESEQ           reduce using rule 17 (expression -> expression EQ expression .)
    >               reduce using rule 17 (expression -> expression EQ expression .)
    <               reduce using rule 17 (expression -> expression EQ expression .)
    ,               reduce using rule 17 (expression -> expression EQ expression .)
    ;               reduce using rule 17 (expression -> expression EQ expression .)
    =               reduce using rule 17 (expression -> expression EQ expression .)
    )               reduce using rule 17 (expression -> expression EQ expression .)
    ]               reduce using rule 17 (expression -> expression EQ expression .)
    :               reduce using rule 17 (expression -> expression EQ expression .)
    {               reduce using rule 17 (expression -> expression EQ expression .)
    RETURN          reduce using rule 17 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 17 (expression -> expression EQ expression .)
    BREAK           reduce using rule 17 (expression -> expression EQ expression .)
    PRINT           reduce using rule 17 (expression -> expression EQ expression .)
    FOR             reduce using rule 17 (expression -> expression EQ expression .)
    WHILE           reduce using rule 17 (expression -> expression EQ expression .)
    IF              reduce using rule 17 (expression -> expression EQ expression .)
    ID              reduce using rule 17 (expression -> expression EQ expression .)
    (               reduce using rule 17 (expression -> expression EQ expression .)
    STRING          reduce using rule 17 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 17 (expression -> expression EQ expression .)
    EYE             reduce using rule 17 (expression -> expression EQ expression .)
    ONES            reduce using rule 17 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 17 (expression -> expression EQ expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 77

    (18) expression -> expression GRTEQ expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 18 (expression -> expression GRTEQ expression .)
    NEQ             reduce using rule 18 (expression -> expression GRTEQ expression .)
    EQ              reduce using rule 18 (expression -> expression GRTEQ expression .)
    GRTEQ           reduce using rule 18 (expression -> expression GRTEQ expression .)
    LESEQ           reduce using rule 18 (expression -> expression GRTEQ expression .)
    >               reduce using rule 18 (expression -> expression GRTEQ expression .)
    <               reduce using rule 18 (expression -> expression GRTEQ expression .)
    ,               reduce using rule 18 (expression -> expression GRTEQ expression .)
    ;               reduce using rule 18 (expression -> expression GRTEQ expression .)
    =               reduce using rule 18 (expression -> expression GRTEQ expression .)
    )               reduce using rule 18 (expression -> expression GRTEQ expression .)
    ]               reduce using rule 18 (expression -> expression GRTEQ expression .)
    :               reduce using rule 18 (expression -> expression GRTEQ expression .)
    {               reduce using rule 18 (expression -> expression GRTEQ expression .)
    RETURN          reduce using rule 18 (expression -> expression GRTEQ expression .)
    CONTINUE        reduce using rule 18 (expression -> expression GRTEQ expression .)
    BREAK           reduce using rule 18 (expression -> expression GRTEQ expression .)
    PRINT           reduce using rule 18 (expression -> expression GRTEQ expression .)
    FOR             reduce using rule 18 (expression -> expression GRTEQ expression .)
    WHILE           reduce using rule 18 (expression -> expression GRTEQ expression .)
    IF              reduce using rule 18 (expression -> expression GRTEQ expression .)
    ID              reduce using rule 18 (expression -> expression GRTEQ expression .)
    (               reduce using rule 18 (expression -> expression GRTEQ expression .)
    STRING          reduce using rule 18 (expression -> expression GRTEQ expression .)
    FLOATNUM        reduce using rule 18 (expression -> expression GRTEQ expression .)
    INTNUM          reduce using rule 18 (expression -> expression GRTEQ expression .)
    EYE             reduce using rule 18 (expression -> expression GRTEQ expression .)
    ONES            reduce using rule 18 (expression -> expression GRTEQ expression .)
    ZEROS           reduce using rule 18 (expression -> expression GRTEQ expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 78

    (19) expression -> expression LESEQ expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 19 (expression -> expression LESEQ expression .)
    NEQ             reduce using rule 19 (expression -> expression LESEQ expression .)
    EQ              reduce using rule 19 (expression -> expression LESEQ expression .)
    GRTEQ           reduce using rule 19 (expression -> expression LESEQ expression .)
    LESEQ           reduce using rule 19 (expression -> expression LESEQ expression .)
    >               reduce using rule 19 (expression -> expression LESEQ expression .)
    <               reduce using rule 19 (expression -> expression LESEQ expression .)
    ,               reduce using rule 19 (expression -> expression LESEQ expression .)
    ;               reduce using rule 19 (expression -> expression LESEQ expression .)
    =               reduce using rule 19 (expression -> expression LESEQ expression .)
    )               reduce using rule 19 (expression -> expression LESEQ expression .)
    ]               reduce using rule 19 (expression -> expression LESEQ expression .)
    :               reduce using rule 19 (expression -> expression LESEQ expression .)
    {               reduce using rule 19 (expression -> expression LESEQ expression .)
    RETURN          reduce using rule 19 (expression -> expression LESEQ expression .)
    CONTINUE        reduce using rule 19 (expression -> expression LESEQ expression .)
    BREAK           reduce using rule 19 (expression -> expression LESEQ expression .)
    PRINT           reduce using rule 19 (expression -> expression LESEQ expression .)
    FOR             reduce using rule 19 (expression -> expression LESEQ expression .)
    WHILE           reduce using rule 19 (expression -> expression LESEQ expression .)
    IF              reduce using rule 19 (expression -> expression LESEQ expression .)
    ID              reduce using rule 19 (expression -> expression LESEQ expression .)
    (               reduce using rule 19 (expression -> expression LESEQ expression .)
    STRING          reduce using rule 19 (expression -> expression LESEQ expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression LESEQ expression .)
    INTNUM          reduce using rule 19 (expression -> expression LESEQ expression .)
    EYE             reduce using rule 19 (expression -> expression LESEQ expression .)
    ONES            reduce using rule 19 (expression -> expression LESEQ expression .)
    ZEROS           reduce using rule 19 (expression -> expression LESEQ expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 79

    (20) expression -> expression > expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 20 (expression -> expression > expression .)
    NEQ             reduce using rule 20 (expression -> expression > expression .)
    EQ              reduce using rule 20 (expression -> expression > expression .)
    GRTEQ           reduce using rule 20 (expression -> expression > expression .)
    LESEQ           reduce using rule 20 (expression -> expression > expression .)
    >               reduce using rule 20 (expression -> expression > expression .)
    <               reduce using rule 20 (expression -> expression > expression .)
    ,               reduce using rule 20 (expression -> expression > expression .)
    ;               reduce using rule 20 (expression -> expression > expression .)
    =               reduce using rule 20 (expression -> expression > expression .)
    )               reduce using rule 20 (expression -> expression > expression .)
    ]               reduce using rule 20 (expression -> expression > expression .)
    :               reduce using rule 20 (expression -> expression > expression .)
    {               reduce using rule 20 (expression -> expression > expression .)
    RETURN          reduce using rule 20 (expression -> expression > expression .)
    CONTINUE        reduce using rule 20 (expression -> expression > expression .)
    BREAK           reduce using rule 20 (expression -> expression > expression .)
    PRINT           reduce using rule 20 (expression -> expression > expression .)
    FOR             reduce using rule 20 (expression -> expression > expression .)
    WHILE           reduce using rule 20 (expression -> expression > expression .)
    IF              reduce using rule 20 (expression -> expression > expression .)
    ID              reduce using rule 20 (expression -> expression > expression .)
    (               reduce using rule 20 (expression -> expression > expression .)
    STRING          reduce using rule 20 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 20 (expression -> expression > expression .)
    INTNUM          reduce using rule 20 (expression -> expression > expression .)
    EYE             reduce using rule 20 (expression -> expression > expression .)
    ONES            reduce using rule 20 (expression -> expression > expression .)
    ZEROS           reduce using rule 20 (expression -> expression > expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 80

    (21) expression -> expression < expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 21 (expression -> expression < expression .)
    NEQ             reduce using rule 21 (expression -> expression < expression .)
    EQ              reduce using rule 21 (expression -> expression < expression .)
    GRTEQ           reduce using rule 21 (expression -> expression < expression .)
    LESEQ           reduce using rule 21 (expression -> expression < expression .)
    >               reduce using rule 21 (expression -> expression < expression .)
    <               reduce using rule 21 (expression -> expression < expression .)
    ,               reduce using rule 21 (expression -> expression < expression .)
    ;               reduce using rule 21 (expression -> expression < expression .)
    =               reduce using rule 21 (expression -> expression < expression .)
    )               reduce using rule 21 (expression -> expression < expression .)
    ]               reduce using rule 21 (expression -> expression < expression .)
    :               reduce using rule 21 (expression -> expression < expression .)
    {               reduce using rule 21 (expression -> expression < expression .)
    RETURN          reduce using rule 21 (expression -> expression < expression .)
    CONTINUE        reduce using rule 21 (expression -> expression < expression .)
    BREAK           reduce using rule 21 (expression -> expression < expression .)
    PRINT           reduce using rule 21 (expression -> expression < expression .)
    FOR             reduce using rule 21 (expression -> expression < expression .)
    WHILE           reduce using rule 21 (expression -> expression < expression .)
    IF              reduce using rule 21 (expression -> expression < expression .)
    ID              reduce using rule 21 (expression -> expression < expression .)
    (               reduce using rule 21 (expression -> expression < expression .)
    STRING          reduce using rule 21 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression < expression .)
    INTNUM          reduce using rule 21 (expression -> expression < expression .)
    EYE             reduce using rule 21 (expression -> expression < expression .)
    ONES            reduce using rule 21 (expression -> expression < expression .)
    ZEROS           reduce using rule 21 (expression -> expression < expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 81

    (25) expression -> expression / expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 25 (expression -> expression / expression .)
    NEQ             reduce using rule 25 (expression -> expression / expression .)
    EQ              reduce using rule 25 (expression -> expression / expression .)
    GRTEQ           reduce using rule 25 (expression -> expression / expression .)
    LESEQ           reduce using rule 25 (expression -> expression / expression .)
    >               reduce using rule 25 (expression -> expression / expression .)
    <               reduce using rule 25 (expression -> expression / expression .)
    /               reduce using rule 25 (expression -> expression / expression .)
    *               reduce using rule 25 (expression -> expression / expression .)
    -               reduce using rule 25 (expression -> expression / expression .)
    +               reduce using rule 25 (expression -> expression / expression .)
    DOTDIV          reduce using rule 25 (expression -> expression / expression .)
    DOTMUL          reduce using rule 25 (expression -> expression / expression .)
    DOTSUB          reduce using rule 25 (expression -> expression / expression .)
    DOTADD          reduce using rule 25 (expression -> expression / expression .)
    ,               reduce using rule 25 (expression -> expression / expression .)
    ;               reduce using rule 25 (expression -> expression / expression .)
    =               reduce using rule 25 (expression -> expression / expression .)
    )               reduce using rule 25 (expression -> expression / expression .)
    ]               reduce using rule 25 (expression -> expression / expression .)
    :               reduce using rule 25 (expression -> expression / expression .)
    {               reduce using rule 25 (expression -> expression / expression .)
    RETURN          reduce using rule 25 (expression -> expression / expression .)
    CONTINUE        reduce using rule 25 (expression -> expression / expression .)
    BREAK           reduce using rule 25 (expression -> expression / expression .)
    PRINT           reduce using rule 25 (expression -> expression / expression .)
    FOR             reduce using rule 25 (expression -> expression / expression .)
    WHILE           reduce using rule 25 (expression -> expression / expression .)
    IF              reduce using rule 25 (expression -> expression / expression .)
    ID              reduce using rule 25 (expression -> expression / expression .)
    (               reduce using rule 25 (expression -> expression / expression .)
    STRING          reduce using rule 25 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression / expression .)
    INTNUM          reduce using rule 25 (expression -> expression / expression .)
    EYE             reduce using rule 25 (expression -> expression / expression .)
    ONES            reduce using rule 25 (expression -> expression / expression .)
    ZEROS           reduce using rule 25 (expression -> expression / expression .)
    '               shift and go to state 55


state 82

    (26) expression -> expression * expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 26 (expression -> expression * expression .)
    NEQ             reduce using rule 26 (expression -> expression * expression .)
    EQ              reduce using rule 26 (expression -> expression * expression .)
    GRTEQ           reduce using rule 26 (expression -> expression * expression .)
    LESEQ           reduce using rule 26 (expression -> expression * expression .)
    >               reduce using rule 26 (expression -> expression * expression .)
    <               reduce using rule 26 (expression -> expression * expression .)
    /               reduce using rule 26 (expression -> expression * expression .)
    *               reduce using rule 26 (expression -> expression * expression .)
    -               reduce using rule 26 (expression -> expression * expression .)
    +               reduce using rule 26 (expression -> expression * expression .)
    DOTDIV          reduce using rule 26 (expression -> expression * expression .)
    DOTMUL          reduce using rule 26 (expression -> expression * expression .)
    DOTSUB          reduce using rule 26 (expression -> expression * expression .)
    DOTADD          reduce using rule 26 (expression -> expression * expression .)
    ,               reduce using rule 26 (expression -> expression * expression .)
    ;               reduce using rule 26 (expression -> expression * expression .)
    =               reduce using rule 26 (expression -> expression * expression .)
    )               reduce using rule 26 (expression -> expression * expression .)
    ]               reduce using rule 26 (expression -> expression * expression .)
    :               reduce using rule 26 (expression -> expression * expression .)
    {               reduce using rule 26 (expression -> expression * expression .)
    RETURN          reduce using rule 26 (expression -> expression * expression .)
    CONTINUE        reduce using rule 26 (expression -> expression * expression .)
    BREAK           reduce using rule 26 (expression -> expression * expression .)
    PRINT           reduce using rule 26 (expression -> expression * expression .)
    FOR             reduce using rule 26 (expression -> expression * expression .)
    WHILE           reduce using rule 26 (expression -> expression * expression .)
    IF              reduce using rule 26 (expression -> expression * expression .)
    ID              reduce using rule 26 (expression -> expression * expression .)
    (               reduce using rule 26 (expression -> expression * expression .)
    STRING          reduce using rule 26 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression * expression .)
    INTNUM          reduce using rule 26 (expression -> expression * expression .)
    EYE             reduce using rule 26 (expression -> expression * expression .)
    ONES            reduce using rule 26 (expression -> expression * expression .)
    ZEROS           reduce using rule 26 (expression -> expression * expression .)
    '               shift and go to state 55


state 83

    (27) expression -> expression - expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 27 (expression -> expression - expression .)
    NEQ             reduce using rule 27 (expression -> expression - expression .)
    EQ              reduce using rule 27 (expression -> expression - expression .)
    GRTEQ           reduce using rule 27 (expression -> expression - expression .)
    LESEQ           reduce using rule 27 (expression -> expression - expression .)
    >               reduce using rule 27 (expression -> expression - expression .)
    <               reduce using rule 27 (expression -> expression - expression .)
    -               reduce using rule 27 (expression -> expression - expression .)
    +               reduce using rule 27 (expression -> expression - expression .)
    DOTSUB          reduce using rule 27 (expression -> expression - expression .)
    DOTADD          reduce using rule 27 (expression -> expression - expression .)
    ,               reduce using rule 27 (expression -> expression - expression .)
    ;               reduce using rule 27 (expression -> expression - expression .)
    =               reduce using rule 27 (expression -> expression - expression .)
    )               reduce using rule 27 (expression -> expression - expression .)
    ]               reduce using rule 27 (expression -> expression - expression .)
    :               reduce using rule 27 (expression -> expression - expression .)
    {               reduce using rule 27 (expression -> expression - expression .)
    RETURN          reduce using rule 27 (expression -> expression - expression .)
    CONTINUE        reduce using rule 27 (expression -> expression - expression .)
    BREAK           reduce using rule 27 (expression -> expression - expression .)
    PRINT           reduce using rule 27 (expression -> expression - expression .)
    FOR             reduce using rule 27 (expression -> expression - expression .)
    WHILE           reduce using rule 27 (expression -> expression - expression .)
    IF              reduce using rule 27 (expression -> expression - expression .)
    ID              reduce using rule 27 (expression -> expression - expression .)
    (               reduce using rule 27 (expression -> expression - expression .)
    STRING          reduce using rule 27 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression - expression .)
    INTNUM          reduce using rule 27 (expression -> expression - expression .)
    EYE             reduce using rule 27 (expression -> expression - expression .)
    ONES            reduce using rule 27 (expression -> expression - expression .)
    ZEROS           reduce using rule 27 (expression -> expression - expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    '               shift and go to state 55


state 84

    (28) expression -> expression + expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 28 (expression -> expression + expression .)
    NEQ             reduce using rule 28 (expression -> expression + expression .)
    EQ              reduce using rule 28 (expression -> expression + expression .)
    GRTEQ           reduce using rule 28 (expression -> expression + expression .)
    LESEQ           reduce using rule 28 (expression -> expression + expression .)
    >               reduce using rule 28 (expression -> expression + expression .)
    <               reduce using rule 28 (expression -> expression + expression .)
    -               reduce using rule 28 (expression -> expression + expression .)
    +               reduce using rule 28 (expression -> expression + expression .)
    DOTSUB          reduce using rule 28 (expression -> expression + expression .)
    DOTADD          reduce using rule 28 (expression -> expression + expression .)
    ,               reduce using rule 28 (expression -> expression + expression .)
    ;               reduce using rule 28 (expression -> expression + expression .)
    =               reduce using rule 28 (expression -> expression + expression .)
    )               reduce using rule 28 (expression -> expression + expression .)
    ]               reduce using rule 28 (expression -> expression + expression .)
    :               reduce using rule 28 (expression -> expression + expression .)
    {               reduce using rule 28 (expression -> expression + expression .)
    RETURN          reduce using rule 28 (expression -> expression + expression .)
    CONTINUE        reduce using rule 28 (expression -> expression + expression .)
    BREAK           reduce using rule 28 (expression -> expression + expression .)
    PRINT           reduce using rule 28 (expression -> expression + expression .)
    FOR             reduce using rule 28 (expression -> expression + expression .)
    WHILE           reduce using rule 28 (expression -> expression + expression .)
    IF              reduce using rule 28 (expression -> expression + expression .)
    ID              reduce using rule 28 (expression -> expression + expression .)
    (               reduce using rule 28 (expression -> expression + expression .)
    STRING          reduce using rule 28 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression + expression .)
    INTNUM          reduce using rule 28 (expression -> expression + expression .)
    EYE             reduce using rule 28 (expression -> expression + expression .)
    ONES            reduce using rule 28 (expression -> expression + expression .)
    ZEROS           reduce using rule 28 (expression -> expression + expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    '               shift and go to state 55


state 85

    (29) expression -> expression DOTDIV expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 29 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 29 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 29 (expression -> expression DOTDIV expression .)
    GRTEQ           reduce using rule 29 (expression -> expression DOTDIV expression .)
    LESEQ           reduce using rule 29 (expression -> expression DOTDIV expression .)
    >               reduce using rule 29 (expression -> expression DOTDIV expression .)
    <               reduce using rule 29 (expression -> expression DOTDIV expression .)
    /               reduce using rule 29 (expression -> expression DOTDIV expression .)
    *               reduce using rule 29 (expression -> expression DOTDIV expression .)
    -               reduce using rule 29 (expression -> expression DOTDIV expression .)
    +               reduce using rule 29 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 29 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 29 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 29 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 29 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 29 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 29 (expression -> expression DOTDIV expression .)
    =               reduce using rule 29 (expression -> expression DOTDIV expression .)
    )               reduce using rule 29 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 29 (expression -> expression DOTDIV expression .)
    :               reduce using rule 29 (expression -> expression DOTDIV expression .)
    {               reduce using rule 29 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 29 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 29 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 29 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 29 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 29 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 29 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 29 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 29 (expression -> expression DOTDIV expression .)
    (               reduce using rule 29 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 29 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 29 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 29 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 29 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 29 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 29 (expression -> expression DOTDIV expression .)
    '               shift and go to state 55


state 86

    (30) expression -> expression DOTMUL expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 30 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 30 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 30 (expression -> expression DOTMUL expression .)
    GRTEQ           reduce using rule 30 (expression -> expression DOTMUL expression .)
    LESEQ           reduce using rule 30 (expression -> expression DOTMUL expression .)
    >               reduce using rule 30 (expression -> expression DOTMUL expression .)
    <               reduce using rule 30 (expression -> expression DOTMUL expression .)
    /               reduce using rule 30 (expression -> expression DOTMUL expression .)
    *               reduce using rule 30 (expression -> expression DOTMUL expression .)
    -               reduce using rule 30 (expression -> expression DOTMUL expression .)
    +               reduce using rule 30 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 30 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 30 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 30 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 30 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 30 (expression -> expression DOTMUL expression .)
    =               reduce using rule 30 (expression -> expression DOTMUL expression .)
    )               reduce using rule 30 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 30 (expression -> expression DOTMUL expression .)
    :               reduce using rule 30 (expression -> expression DOTMUL expression .)
    {               reduce using rule 30 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 30 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 30 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 30 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 30 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 30 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 30 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 30 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 30 (expression -> expression DOTMUL expression .)
    (               reduce using rule 30 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 30 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 30 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 30 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 30 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 30 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 30 (expression -> expression DOTMUL expression .)
    '               shift and go to state 55


state 87

    (31) expression -> expression DOTSUB expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 31 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 31 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 31 (expression -> expression DOTSUB expression .)
    GRTEQ           reduce using rule 31 (expression -> expression DOTSUB expression .)
    LESEQ           reduce using rule 31 (expression -> expression DOTSUB expression .)
    >               reduce using rule 31 (expression -> expression DOTSUB expression .)
    <               reduce using rule 31 (expression -> expression DOTSUB expression .)
    -               reduce using rule 31 (expression -> expression DOTSUB expression .)
    +               reduce using rule 31 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 31 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 31 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 31 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 31 (expression -> expression DOTSUB expression .)
    =               reduce using rule 31 (expression -> expression DOTSUB expression .)
    )               reduce using rule 31 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 31 (expression -> expression DOTSUB expression .)
    :               reduce using rule 31 (expression -> expression DOTSUB expression .)
    {               reduce using rule 31 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 31 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 31 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 31 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 31 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 31 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 31 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 31 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 31 (expression -> expression DOTSUB expression .)
    (               reduce using rule 31 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 31 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 31 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 31 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 31 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 31 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 31 (expression -> expression DOTSUB expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    '               shift and go to state 55


state 88

    (32) expression -> expression DOTADD expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    [               reduce using rule 32 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 32 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 32 (expression -> expression DOTADD expression .)
    GRTEQ           reduce using rule 32 (expression -> expression DOTADD expression .)
    LESEQ           reduce using rule 32 (expression -> expression DOTADD expression .)
    >               reduce using rule 32 (expression -> expression DOTADD expression .)
    <               reduce using rule 32 (expression -> expression DOTADD expression .)
    -               reduce using rule 32 (expression -> expression DOTADD expression .)
    +               reduce using rule 32 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 32 (expression -> expression DOTADD expression .)
    ,               reduce using rule 32 (expression -> expression DOTADD expression .)
    ;               reduce using rule 32 (expression -> expression DOTADD expression .)
    =               reduce using rule 32 (expression -> expression DOTADD expression .)
    )               reduce using rule 32 (expression -> expression DOTADD expression .)
    ]               reduce using rule 32 (expression -> expression DOTADD expression .)
    :               reduce using rule 32 (expression -> expression DOTADD expression .)
    {               reduce using rule 32 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 32 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 32 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 32 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 32 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 32 (expression -> expression DOTADD expression .)
    IF              reduce using rule 32 (expression -> expression DOTADD expression .)
    ID              reduce using rule 32 (expression -> expression DOTADD expression .)
    (               reduce using rule 32 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 32 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 32 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 32 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 32 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 32 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 32 (expression -> expression DOTADD expression .)
    /               shift and go to state 47
    *               shift and go to state 48
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    '               shift and go to state 55


state 89

    (55) loop -> WHILE ( expression . ) block
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    )               shift and go to state 105
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 90

    (23) expression -> ( expression ) .
    [               reduce using rule 23 (expression -> ( expression ) .)
    NEQ             reduce using rule 23 (expression -> ( expression ) .)
    EQ              reduce using rule 23 (expression -> ( expression ) .)
    GRTEQ           reduce using rule 23 (expression -> ( expression ) .)
    LESEQ           reduce using rule 23 (expression -> ( expression ) .)
    >               reduce using rule 23 (expression -> ( expression ) .)
    <               reduce using rule 23 (expression -> ( expression ) .)
    /               reduce using rule 23 (expression -> ( expression ) .)
    *               reduce using rule 23 (expression -> ( expression ) .)
    -               reduce using rule 23 (expression -> ( expression ) .)
    +               reduce using rule 23 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 23 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 23 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 23 (expression -> ( expression ) .)
    DOTADD          reduce using rule 23 (expression -> ( expression ) .)
    '               reduce using rule 23 (expression -> ( expression ) .)
    ,               reduce using rule 23 (expression -> ( expression ) .)
    ;               reduce using rule 23 (expression -> ( expression ) .)
    =               reduce using rule 23 (expression -> ( expression ) .)
    )               reduce using rule 23 (expression -> ( expression ) .)
    ]               reduce using rule 23 (expression -> ( expression ) .)
    :               reduce using rule 23 (expression -> ( expression ) .)
    {               reduce using rule 23 (expression -> ( expression ) .)
    RETURN          reduce using rule 23 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 23 (expression -> ( expression ) .)
    BREAK           reduce using rule 23 (expression -> ( expression ) .)
    PRINT           reduce using rule 23 (expression -> ( expression ) .)
    FOR             reduce using rule 23 (expression -> ( expression ) .)
    WHILE           reduce using rule 23 (expression -> ( expression ) .)
    IF              reduce using rule 23 (expression -> ( expression ) .)
    ID              reduce using rule 23 (expression -> ( expression ) .)
    (               reduce using rule 23 (expression -> ( expression ) .)
    STRING          reduce using rule 23 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 23 (expression -> ( expression ) .)
    INTNUM          reduce using rule 23 (expression -> ( expression ) .)
    EYE             reduce using rule 23 (expression -> ( expression ) .)
    ONES            reduce using rule 23 (expression -> ( expression ) .)
    ZEROS           reduce using rule 23 (expression -> ( expression ) .)


state 91

    (52) conditional -> IF ( expression . ) block
    (53) conditional -> IF ( expression . ) block ELSE block
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    )               shift and go to state 106
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 92

    (41) assignment -> variable DIVASSIGN expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 41 (assignment -> variable DIVASSIGN expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 93

    (42) assignment -> variable MULASSIGN expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 42 (assignment -> variable MULASSIGN expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 94

    (43) assignment -> variable SUBASSIGN expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 43 (assignment -> variable SUBASSIGN expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 95

    (44) assignment -> variable ADDASSIGN expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 44 (assignment -> variable ADDASSIGN expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 96

    (45) assignment -> variable = expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ;               reduce using rule 45 (assignment -> variable = expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 97

    (22) expression -> [ list ] .
    [               reduce using rule 22 (expression -> [ list ] .)
    NEQ             reduce using rule 22 (expression -> [ list ] .)
    EQ              reduce using rule 22 (expression -> [ list ] .)
    GRTEQ           reduce using rule 22 (expression -> [ list ] .)
    LESEQ           reduce using rule 22 (expression -> [ list ] .)
    >               reduce using rule 22 (expression -> [ list ] .)
    <               reduce using rule 22 (expression -> [ list ] .)
    /               reduce using rule 22 (expression -> [ list ] .)
    *               reduce using rule 22 (expression -> [ list ] .)
    -               reduce using rule 22 (expression -> [ list ] .)
    +               reduce using rule 22 (expression -> [ list ] .)
    DOTDIV          reduce using rule 22 (expression -> [ list ] .)
    DOTMUL          reduce using rule 22 (expression -> [ list ] .)
    DOTSUB          reduce using rule 22 (expression -> [ list ] .)
    DOTADD          reduce using rule 22 (expression -> [ list ] .)
    '               reduce using rule 22 (expression -> [ list ] .)
    ,               reduce using rule 22 (expression -> [ list ] .)
    ;               reduce using rule 22 (expression -> [ list ] .)
    =               reduce using rule 22 (expression -> [ list ] .)
    )               reduce using rule 22 (expression -> [ list ] .)
    ]               reduce using rule 22 (expression -> [ list ] .)
    :               reduce using rule 22 (expression -> [ list ] .)
    {               reduce using rule 22 (expression -> [ list ] .)
    RETURN          reduce using rule 22 (expression -> [ list ] .)
    CONTINUE        reduce using rule 22 (expression -> [ list ] .)
    BREAK           reduce using rule 22 (expression -> [ list ] .)
    PRINT           reduce using rule 22 (expression -> [ list ] .)
    FOR             reduce using rule 22 (expression -> [ list ] .)
    WHILE           reduce using rule 22 (expression -> [ list ] .)
    IF              reduce using rule 22 (expression -> [ list ] .)
    ID              reduce using rule 22 (expression -> [ list ] .)
    (               reduce using rule 22 (expression -> [ list ] .)
    STRING          reduce using rule 22 (expression -> [ list ] .)
    FLOATNUM        reduce using rule 22 (expression -> [ list ] .)
    INTNUM          reduce using rule 22 (expression -> [ list ] .)
    EYE             reduce using rule 22 (expression -> [ list ] .)
    ONES            reduce using rule 22 (expression -> [ list ] .)
    ZEROS           reduce using rule 22 (expression -> [ list ] .)


state 98

    (49) matrix_function -> EYE ( list . )
    )               shift and go to state 107


state 99

    (50) matrix_function -> ONES ( list . )
    )               shift and go to state 108


state 100

    (51) matrix_function -> ZEROS ( list . )
    )               shift and go to state 109


state 101

    (48) list -> expression , list .
    ;               reduce using rule 48 (list -> expression , list .)
    ]               reduce using rule 48 (list -> expression , list .)
    )               reduce using rule 48 (list -> expression , list .)


state 102

    (56) range -> expression . : expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    :               shift and go to state 110
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 103

    (54) loop -> FOR expression = range . block
    (14) block -> . instruction
    (15) block -> . { instructions }
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 113
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    expression                     shift and go to state 14
    block                          shift and go to state 111
    instruction                    shift and go to state 112
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 104

    (46) reference -> expression [ expression , . expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 114
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 105

    (55) loop -> WHILE ( expression ) . block
    (14) block -> . instruction
    (15) block -> . { instructions }
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 113
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    expression                     shift and go to state 14
    block                          shift and go to state 115
    instruction                    shift and go to state 112
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 106

    (52) conditional -> IF ( expression ) . block
    (53) conditional -> IF ( expression ) . block ELSE block
    (14) block -> . instruction
    (15) block -> . { instructions }
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 113
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    expression                     shift and go to state 14
    block                          shift and go to state 116
    instruction                    shift and go to state 112
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 107

    (49) matrix_function -> EYE ( list ) .
    [               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    NEQ             reduce using rule 49 (matrix_function -> EYE ( list ) .)
    EQ              reduce using rule 49 (matrix_function -> EYE ( list ) .)
    GRTEQ           reduce using rule 49 (matrix_function -> EYE ( list ) .)
    LESEQ           reduce using rule 49 (matrix_function -> EYE ( list ) .)
    >               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    <               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    /               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    *               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    -               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    +               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    DOTDIV          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    DOTMUL          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    DOTSUB          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    DOTADD          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    '               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ,               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ;               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    =               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    )               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ]               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    :               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    {               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    RETURN          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    CONTINUE        reduce using rule 49 (matrix_function -> EYE ( list ) .)
    BREAK           reduce using rule 49 (matrix_function -> EYE ( list ) .)
    PRINT           reduce using rule 49 (matrix_function -> EYE ( list ) .)
    FOR             reduce using rule 49 (matrix_function -> EYE ( list ) .)
    WHILE           reduce using rule 49 (matrix_function -> EYE ( list ) .)
    IF              reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ID              reduce using rule 49 (matrix_function -> EYE ( list ) .)
    (               reduce using rule 49 (matrix_function -> EYE ( list ) .)
    STRING          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    FLOATNUM        reduce using rule 49 (matrix_function -> EYE ( list ) .)
    INTNUM          reduce using rule 49 (matrix_function -> EYE ( list ) .)
    EYE             reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ONES            reduce using rule 49 (matrix_function -> EYE ( list ) .)
    ZEROS           reduce using rule 49 (matrix_function -> EYE ( list ) .)


state 108

    (50) matrix_function -> ONES ( list ) .
    [               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    NEQ             reduce using rule 50 (matrix_function -> ONES ( list ) .)
    EQ              reduce using rule 50 (matrix_function -> ONES ( list ) .)
    GRTEQ           reduce using rule 50 (matrix_function -> ONES ( list ) .)
    LESEQ           reduce using rule 50 (matrix_function -> ONES ( list ) .)
    >               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    <               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    /               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    *               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    -               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    +               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    DOTDIV          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    DOTMUL          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    DOTSUB          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    DOTADD          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    '               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ,               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ;               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    =               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    )               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ]               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    :               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    {               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    RETURN          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    CONTINUE        reduce using rule 50 (matrix_function -> ONES ( list ) .)
    BREAK           reduce using rule 50 (matrix_function -> ONES ( list ) .)
    PRINT           reduce using rule 50 (matrix_function -> ONES ( list ) .)
    FOR             reduce using rule 50 (matrix_function -> ONES ( list ) .)
    WHILE           reduce using rule 50 (matrix_function -> ONES ( list ) .)
    IF              reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ID              reduce using rule 50 (matrix_function -> ONES ( list ) .)
    (               reduce using rule 50 (matrix_function -> ONES ( list ) .)
    STRING          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    FLOATNUM        reduce using rule 50 (matrix_function -> ONES ( list ) .)
    INTNUM          reduce using rule 50 (matrix_function -> ONES ( list ) .)
    EYE             reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ONES            reduce using rule 50 (matrix_function -> ONES ( list ) .)
    ZEROS           reduce using rule 50 (matrix_function -> ONES ( list ) .)


state 109

    (51) matrix_function -> ZEROS ( list ) .
    [               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    NEQ             reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    EQ              reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    GRTEQ           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    LESEQ           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    >               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    <               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    /               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    *               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    -               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    +               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    DOTDIV          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    DOTMUL          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    DOTSUB          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    DOTADD          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    '               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ,               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ;               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    =               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    )               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ]               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    :               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    {               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    RETURN          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    CONTINUE        reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    BREAK           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    PRINT           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    FOR             reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    WHILE           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    IF              reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ID              reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    (               reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    STRING          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    FLOATNUM        reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    INTNUM          reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    EYE             reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ONES            reduce using rule 51 (matrix_function -> ZEROS ( list ) .)
    ZEROS           reduce using rule 51 (matrix_function -> ZEROS ( list ) .)


state 110

    (56) range -> expression : . expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29
    ID              shift and go to state 20

    expression                     shift and go to state 117
    matrix_function                shift and go to state 22
    variable                       shift and go to state 34
    reference                      shift and go to state 19

state 111

    (54) loop -> FOR expression = range block .
    RETURN          reduce using rule 54 (loop -> FOR expression = range block .)
    CONTINUE        reduce using rule 54 (loop -> FOR expression = range block .)
    BREAK           reduce using rule 54 (loop -> FOR expression = range block .)
    PRINT           reduce using rule 54 (loop -> FOR expression = range block .)
    FOR             reduce using rule 54 (loop -> FOR expression = range block .)
    WHILE           reduce using rule 54 (loop -> FOR expression = range block .)
    IF              reduce using rule 54 (loop -> FOR expression = range block .)
    ID              reduce using rule 54 (loop -> FOR expression = range block .)
    [               reduce using rule 54 (loop -> FOR expression = range block .)
    (               reduce using rule 54 (loop -> FOR expression = range block .)
    STRING          reduce using rule 54 (loop -> FOR expression = range block .)
    FLOATNUM        reduce using rule 54 (loop -> FOR expression = range block .)
    INTNUM          reduce using rule 54 (loop -> FOR expression = range block .)
    -               reduce using rule 54 (loop -> FOR expression = range block .)
    EYE             reduce using rule 54 (loop -> FOR expression = range block .)
    ONES            reduce using rule 54 (loop -> FOR expression = range block .)
    ZEROS           reduce using rule 54 (loop -> FOR expression = range block .)
    $end            reduce using rule 54 (loop -> FOR expression = range block .)
    }               reduce using rule 54 (loop -> FOR expression = range block .)
    ELSE            reduce using rule 54 (loop -> FOR expression = range block .)


state 112

    (14) block -> instruction .
    RETURN          reduce using rule 14 (block -> instruction .)
    CONTINUE        reduce using rule 14 (block -> instruction .)
    BREAK           reduce using rule 14 (block -> instruction .)
    PRINT           reduce using rule 14 (block -> instruction .)
    FOR             reduce using rule 14 (block -> instruction .)
    WHILE           reduce using rule 14 (block -> instruction .)
    IF              reduce using rule 14 (block -> instruction .)
    ID              reduce using rule 14 (block -> instruction .)
    [               reduce using rule 14 (block -> instruction .)
    (               reduce using rule 14 (block -> instruction .)
    STRING          reduce using rule 14 (block -> instruction .)
    FLOATNUM        reduce using rule 14 (block -> instruction .)
    INTNUM          reduce using rule 14 (block -> instruction .)
    -               reduce using rule 14 (block -> instruction .)
    EYE             reduce using rule 14 (block -> instruction .)
    ONES            reduce using rule 14 (block -> instruction .)
    ZEROS           reduce using rule 14 (block -> instruction .)
    $end            reduce using rule 14 (block -> instruction .)
    }               reduce using rule 14 (block -> instruction .)
    ELSE            reduce using rule 14 (block -> instruction .)


state 113

    (15) block -> { . instructions }
    (4) instructions -> . { instructions }
    (5) instructions -> . instruction
    (6) instructions -> . instructions instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 4
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    instructions                   shift and go to state 118
    instruction                    shift and go to state 5
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 114

    (46) reference -> expression [ expression , expression . ]
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    ]               shift and go to state 119
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    -               shift and go to state 49
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55
    [               shift and go to state 40


state 115

    (55) loop -> WHILE ( expression ) block .
    RETURN          reduce using rule 55 (loop -> WHILE ( expression ) block .)
    CONTINUE        reduce using rule 55 (loop -> WHILE ( expression ) block .)
    BREAK           reduce using rule 55 (loop -> WHILE ( expression ) block .)
    PRINT           reduce using rule 55 (loop -> WHILE ( expression ) block .)
    FOR             reduce using rule 55 (loop -> WHILE ( expression ) block .)
    WHILE           reduce using rule 55 (loop -> WHILE ( expression ) block .)
    IF              reduce using rule 55 (loop -> WHILE ( expression ) block .)
    ID              reduce using rule 55 (loop -> WHILE ( expression ) block .)
    [               reduce using rule 55 (loop -> WHILE ( expression ) block .)
    (               reduce using rule 55 (loop -> WHILE ( expression ) block .)
    STRING          reduce using rule 55 (loop -> WHILE ( expression ) block .)
    FLOATNUM        reduce using rule 55 (loop -> WHILE ( expression ) block .)
    INTNUM          reduce using rule 55 (loop -> WHILE ( expression ) block .)
    -               reduce using rule 55 (loop -> WHILE ( expression ) block .)
    EYE             reduce using rule 55 (loop -> WHILE ( expression ) block .)
    ONES            reduce using rule 55 (loop -> WHILE ( expression ) block .)
    ZEROS           reduce using rule 55 (loop -> WHILE ( expression ) block .)
    $end            reduce using rule 55 (loop -> WHILE ( expression ) block .)
    }               reduce using rule 55 (loop -> WHILE ( expression ) block .)
    ELSE            reduce using rule 55 (loop -> WHILE ( expression ) block .)


state 116

    (52) conditional -> IF ( expression ) block .
    (53) conditional -> IF ( expression ) block . ELSE block
    RETURN          reduce using rule 52 (conditional -> IF ( expression ) block .)
    CONTINUE        reduce using rule 52 (conditional -> IF ( expression ) block .)
    BREAK           reduce using rule 52 (conditional -> IF ( expression ) block .)
    PRINT           reduce using rule 52 (conditional -> IF ( expression ) block .)
    FOR             reduce using rule 52 (conditional -> IF ( expression ) block .)
    WHILE           reduce using rule 52 (conditional -> IF ( expression ) block .)
    IF              reduce using rule 52 (conditional -> IF ( expression ) block .)
    ID              reduce using rule 52 (conditional -> IF ( expression ) block .)
    [               reduce using rule 52 (conditional -> IF ( expression ) block .)
    (               reduce using rule 52 (conditional -> IF ( expression ) block .)
    STRING          reduce using rule 52 (conditional -> IF ( expression ) block .)
    FLOATNUM        reduce using rule 52 (conditional -> IF ( expression ) block .)
    INTNUM          reduce using rule 52 (conditional -> IF ( expression ) block .)
    -               reduce using rule 52 (conditional -> IF ( expression ) block .)
    EYE             reduce using rule 52 (conditional -> IF ( expression ) block .)
    ONES            reduce using rule 52 (conditional -> IF ( expression ) block .)
    ZEROS           reduce using rule 52 (conditional -> IF ( expression ) block .)
    $end            reduce using rule 52 (conditional -> IF ( expression ) block .)
    }               reduce using rule 52 (conditional -> IF ( expression ) block .)
    ELSE            shift and go to state 120


state 117

    (56) range -> expression : expression .
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . GRTEQ expression
    (19) expression -> expression . LESEQ expression
    (20) expression -> expression . > expression
    (21) expression -> expression . < expression
    (25) expression -> expression . / expression
    (26) expression -> expression . * expression
    (27) expression -> expression . - expression
    (28) expression -> expression . + expression
    (29) expression -> expression . DOTDIV expression
    (30) expression -> expression . DOTMUL expression
    (31) expression -> expression . DOTSUB expression
    (32) expression -> expression . DOTADD expression
    (37) expression -> expression . '
    (46) reference -> expression . [ expression , expression ]
    {               reduce using rule 56 (range -> expression : expression .)
    RETURN          reduce using rule 56 (range -> expression : expression .)
    CONTINUE        reduce using rule 56 (range -> expression : expression .)
    BREAK           reduce using rule 56 (range -> expression : expression .)
    PRINT           reduce using rule 56 (range -> expression : expression .)
    FOR             reduce using rule 56 (range -> expression : expression .)
    WHILE           reduce using rule 56 (range -> expression : expression .)
    IF              reduce using rule 56 (range -> expression : expression .)
    ID              reduce using rule 56 (range -> expression : expression .)
    [               reduce using rule 56 (range -> expression : expression .)
    (               reduce using rule 56 (range -> expression : expression .)
    STRING          reduce using rule 56 (range -> expression : expression .)
    FLOATNUM        reduce using rule 56 (range -> expression : expression .)
    INTNUM          reduce using rule 56 (range -> expression : expression .)
    -               reduce using rule 56 (range -> expression : expression .)
    EYE             reduce using rule 56 (range -> expression : expression .)
    ONES            reduce using rule 56 (range -> expression : expression .)
    ZEROS           reduce using rule 56 (range -> expression : expression .)
    NEQ             shift and go to state 41
    EQ              shift and go to state 42
    GRTEQ           shift and go to state 43
    LESEQ           shift and go to state 44
    >               shift and go to state 45
    <               shift and go to state 46
    /               shift and go to state 47
    *               shift and go to state 48
    +               shift and go to state 50
    DOTDIV          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTSUB          shift and go to state 53
    DOTADD          shift and go to state 54
    '               shift and go to state 55


state 118

    (15) block -> { instructions . }
    (6) instructions -> instructions . instruction
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    }               shift and go to state 121
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    instruction                    shift and go to state 30
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    expression                     shift and go to state 14
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 119

    (46) reference -> expression [ expression , expression ] .
    DIVASSIGN       reduce using rule 46 (reference -> expression [ expression , expression ] .)
    MULASSIGN       reduce using rule 46 (reference -> expression [ expression , expression ] .)
    SUBASSIGN       reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ADDASSIGN       reduce using rule 46 (reference -> expression [ expression , expression ] .)
    =               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    [               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    NEQ             reduce using rule 46 (reference -> expression [ expression , expression ] .)
    EQ              reduce using rule 46 (reference -> expression [ expression , expression ] .)
    GRTEQ           reduce using rule 46 (reference -> expression [ expression , expression ] .)
    LESEQ           reduce using rule 46 (reference -> expression [ expression , expression ] .)
    >               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    <               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    /               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    *               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    -               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    +               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    DOTDIV          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    DOTMUL          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    DOTSUB          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    DOTADD          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    '               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ,               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ;               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    )               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ]               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    :               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    {               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    RETURN          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    CONTINUE        reduce using rule 46 (reference -> expression [ expression , expression ] .)
    BREAK           reduce using rule 46 (reference -> expression [ expression , expression ] .)
    PRINT           reduce using rule 46 (reference -> expression [ expression , expression ] .)
    FOR             reduce using rule 46 (reference -> expression [ expression , expression ] .)
    WHILE           reduce using rule 46 (reference -> expression [ expression , expression ] .)
    IF              reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ID              reduce using rule 46 (reference -> expression [ expression , expression ] .)
    (               reduce using rule 46 (reference -> expression [ expression , expression ] .)
    STRING          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    FLOATNUM        reduce using rule 46 (reference -> expression [ expression , expression ] .)
    INTNUM          reduce using rule 46 (reference -> expression [ expression , expression ] .)
    EYE             reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ONES            reduce using rule 46 (reference -> expression [ expression , expression ] .)
    ZEROS           reduce using rule 46 (reference -> expression [ expression , expression ] .)


state 120

    (53) conditional -> IF ( expression ) block ELSE . block
    (14) block -> . instruction
    (15) block -> . { instructions }
    (7) instruction -> . RETURN list ;
    (8) instruction -> . CONTINUE ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . PRINT list ;
    (11) instruction -> . loop
    (12) instruction -> . conditional
    (13) instruction -> . assignment ;
    (54) loop -> . FOR expression = range block
    (55) loop -> . WHILE ( expression ) block
    (52) conditional -> . IF ( expression ) block
    (53) conditional -> . IF ( expression ) block ELSE block
    (41) assignment -> . variable DIVASSIGN expression
    (42) assignment -> . variable MULASSIGN expression
    (43) assignment -> . variable SUBASSIGN expression
    (44) assignment -> . variable ADDASSIGN expression
    (45) assignment -> . variable = expression
    (39) variable -> . reference
    (40) variable -> . ID
    (46) reference -> . expression [ expression , expression ]
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression GRTEQ expression
    (19) expression -> . expression LESEQ expression
    (20) expression -> . expression > expression
    (21) expression -> . expression < expression
    (22) expression -> . [ list ]
    (23) expression -> . ( expression )
    (24) expression -> . matrix_function
    (25) expression -> . expression / expression
    (26) expression -> . expression * expression
    (27) expression -> . expression - expression
    (28) expression -> . expression + expression
    (29) expression -> . expression DOTDIV expression
    (30) expression -> . expression DOTMUL expression
    (31) expression -> . expression DOTSUB expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . variable
    (34) expression -> . STRING
    (35) expression -> . FLOATNUM
    (36) expression -> . INTNUM
    (37) expression -> . expression '
    (38) expression -> . - expression
    (49) matrix_function -> . EYE ( list )
    (50) matrix_function -> . ONES ( list )
    (51) matrix_function -> . ZEROS ( list )
    {               shift and go to state 113
    RETURN          shift and go to state 6
    CONTINUE        shift and go to state 7
    BREAK           shift and go to state 8
    PRINT           shift and go to state 9
    FOR             shift and go to state 13
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    ID              shift and go to state 20
    [               shift and go to state 21
    (               shift and go to state 16
    STRING          shift and go to state 24
    FLOATNUM        shift and go to state 25
    INTNUM          shift and go to state 26
    -               shift and go to state 23
    EYE             shift and go to state 27
    ONES            shift and go to state 28
    ZEROS           shift and go to state 29

    expression                     shift and go to state 14
    block                          shift and go to state 122
    instruction                    shift and go to state 112
    loop                           shift and go to state 10
    conditional                    shift and go to state 11
    assignment                     shift and go to state 12
    variable                       shift and go to state 18
    reference                      shift and go to state 19
    matrix_function                shift and go to state 22

state 121

    (15) block -> { instructions } .
    RETURN          reduce using rule 15 (block -> { instructions } .)
    CONTINUE        reduce using rule 15 (block -> { instructions } .)
    BREAK           reduce using rule 15 (block -> { instructions } .)
    PRINT           reduce using rule 15 (block -> { instructions } .)
    FOR             reduce using rule 15 (block -> { instructions } .)
    WHILE           reduce using rule 15 (block -> { instructions } .)
    IF              reduce using rule 15 (block -> { instructions } .)
    ID              reduce using rule 15 (block -> { instructions } .)
    [               reduce using rule 15 (block -> { instructions } .)
    (               reduce using rule 15 (block -> { instructions } .)
    STRING          reduce using rule 15 (block -> { instructions } .)
    FLOATNUM        reduce using rule 15 (block -> { instructions } .)
    INTNUM          reduce using rule 15 (block -> { instructions } .)
    -               reduce using rule 15 (block -> { instructions } .)
    EYE             reduce using rule 15 (block -> { instructions } .)
    ONES            reduce using rule 15 (block -> { instructions } .)
    ZEROS           reduce using rule 15 (block -> { instructions } .)
    $end            reduce using rule 15 (block -> { instructions } .)
    }               reduce using rule 15 (block -> { instructions } .)
    ELSE            reduce using rule 15 (block -> { instructions } .)


state 122

    (53) conditional -> IF ( expression ) block ELSE block .
    RETURN          reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    CONTINUE        reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    BREAK           reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    PRINT           reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    FOR             reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    WHILE           reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    IF              reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    ID              reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    [               reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    (               reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    STRING          reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    FLOATNUM        reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    INTNUM          reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    -               reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    EYE             reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    ONES            reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    ZEROS           reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    $end            reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    }               reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
    ELSE            reduce using rule 53 (conditional -> IF ( expression ) block ELSE block .)
